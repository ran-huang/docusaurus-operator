"use strict";(self.webpackChunkpingcap_docs=self.webpackChunkpingcap_docs||[]).push([[2349],{3905:function(e,a,t){t.d(a,{Zo:function(){return i},kt:function(){return k}});var l=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function p(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function m(e,a){if(null==e)return{};var t,l,n=function(e,a){if(null==e)return{};var t,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)t=r[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=l.createContext({}),c=function(e){var a=l.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):p(p({},a),e)),t},i=function(e){var a=c(e.components);return l.createElement(s.Provider,{value:a},e.children)},o={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},u=l.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,i=m(e,["components","mdxType","originalType","parentName"]),u=c(t),k=n,d=u["".concat(s,".").concat(k)]||u[k]||o[k]||r;return t?l.createElement(d,p(p({ref:a},i),{},{components:t})):l.createElement(d,p({ref:a},i))}));function k(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var r=t.length,p=new Array(r);p[0]=u;var m={};for(var s in a)hasOwnProperty.call(a,s)&&(m[s]=a[s]);m.originalType=e,m.mdxType="string"==typeof e?e:n,p[1]=m;for(var c=2;c<r;c++)p[c]=t[c];return l.createElement.apply(null,p)}return l.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7217:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return m},contentTitle:function(){return s},metadata:function(){return c},assets:function(){return i},toc:function(){return o},default:function(){return k}});var l=t(7462),n=t(3366),r=(t(7294),t(3905)),p=["components"],m={title:"Command Cheat Sheet for TiDB Cluster Management",summary:"Learn the commonly used commands for managing TiDB clusters."},s="Command Cheat Sheet for TiDB Cluster Management",c={unversionedId:"cheat-sheet",id:"cheat-sheet",title:"Command Cheat Sheet for TiDB Cluster Management",description:"This document is an overview of the commands used for TiDB cluster management.",source:"@site/docs/cheat-sheet.md",sourceDirName:".",slug:"/cheat-sheet",permalink:"/cheat-sheet",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cheat-sheet.md",tags:[],version:"current",frontMatter:{title:"Command Cheat Sheet for TiDB Cluster Management",summary:"Learn the commonly used commands for managing TiDB clusters."},sidebar:"refSidebar",previous:{title:"TiDB in Kubernetes Sysbench Performance Test",permalink:"/benchmark-sysbench"},next:{title:"RBAC rules required by TiDB Operator",permalink:"/tidb-operator-rbac"}},i={},o=[{value:"kubectl",id:"kubectl",level:2},{value:"View resources",id:"view-resources",level:3},{value:"Update resources",id:"update-resources",level:3},{value:"Edit resources",id:"edit-resources",level:3},{value:"Patch Resources",id:"patch-resources",level:3},{value:"Create resources",id:"create-resources",level:3},{value:"Interact with running Pods",id:"interact-with-running-pods",level:3},{value:"Interact with nodes",id:"interact-with-nodes",level:3},{value:"Delete resources",id:"delete-resources",level:3},{value:"More",id:"more",level:3},{value:"Helm",id:"helm",level:2},{value:"Add Helm repository",id:"add-helm-repository",level:3},{value:"Update Helm repository",id:"update-helm-repository",level:3},{value:"View available Helm chart",id:"view-available-helm-chart",level:3},{value:"Get the default <code>values.yaml</code> of the Helm chart",id:"get-the-default-valuesyaml-of-the-helm-chart",level:3},{value:"Deploy using Helm chart",id:"deploy-using-helm-chart",level:3},{value:"View the deployed Helm release",id:"view-the-deployed-helm-release",level:3},{value:"Update Helm release",id:"update-helm-release",level:3},{value:"Delete Helm release",id:"delete-helm-release",level:3},{value:"More",id:"more-1",level:3}],u={toc:o};function k(e){var a=e.components,t=(0,n.Z)(e,p);return(0,r.kt)("wrapper",(0,l.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"command-cheat-sheet-for-tidb-cluster-management"},"Command Cheat Sheet for TiDB Cluster Management"),(0,r.kt)("p",null,"This document is an overview of the commands used for TiDB cluster management."),(0,r.kt)("h2",{id:"kubectl"},"kubectl"),(0,r.kt)("h3",{id:"view-resources"},"View resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View CRD:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get crd\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View TidbCluster:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get tc ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View TidbMonitor:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get tidbmonitor ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View Backup:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get bk ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View BackupSchedule:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get bks ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View Restore:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get restore ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View TidbClusterAutoScaler:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get tidbclusterautoscaler ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View TidbInitializer:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get tidbinitializer ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View Advanced StatefulSet:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get asts ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View a Pod:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get pod ${name}\n")),(0,r.kt)("p",{parentName:"li"},"  View a TiKV Pod:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get pod -l app.kubernetes.io/component=tikv\n")),(0,r.kt)("p",{parentName:"li"},"  View the continuous status change of a Pod:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"watch kubectl -n ${namespace} get pod\n")),(0,r.kt)("p",{parentName:"li"},"  View the detailed information of a Pod:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} describe pod ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View the node on which Pods are located:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl -n ${namespace} get pods -l "app.kubernetes.io/component=tidb,app.kubernetes.io/instance=${cluster_name}" -ojsonpath="{range .items[*]}{.spec.nodeName}{\'\\n\'}{end}"\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View Service:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get service ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View ConfigMap:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get cm ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View a PersistentVolume (PV):"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get pv ${name}\n")),(0,r.kt)("p",{parentName:"li"},"  View the PV used by the cluster:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get pv -l app.kubernetes.io/namespace=${namespace},app.kubernetes.io/managed-by=tidb-operator,app.kubernetes.io/instance=${cluster_name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View a PersistentVolumeClaim (PVC):"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get pvc ${name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View StorageClass:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get sc\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View StatefulSet:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} get sts ${name}\n")),(0,r.kt)("p",{parentName:"li"},"  View the detailed information of StatefulSet:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} describe sts ${name}\n")))),(0,r.kt)("h3",{id:"update-resources"},"Update resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Add an annotation for TiDBCluster:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} annotate tc ${cluster_name} ${key}=${value}\n")),(0,r.kt)("p",{parentName:"li"},"  Add a force-upgrade annotation for TiDBCluster:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} annotate --overwrite tc ${cluster_name} tidb.pingcap.com/force-upgrade=true\n")),(0,r.kt)("p",{parentName:"li"},"  Delete a force-upgrade annotation for TiDBCluster:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} annotate tc ${cluster_name} tidb.pingcap.com/force-upgrade-\n")),(0,r.kt)("p",{parentName:"li"},"  Enable the debug mode for Pods:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} annotate pod ${pod_name} runmode=debug\n")))),(0,r.kt)("h3",{id:"edit-resources"},"Edit resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Edit TidbCluster:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} edit tc ${name}\n")))),(0,r.kt)("h3",{id:"patch-resources"},"Patch Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Patch TidbCluster:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} patch tc ${name} --type merge -p '${json_path}'\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Patch PV ReclaimPolicy:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl patch pv ${name} -p \'{"spec":{"persistentVolumeReclaimPolicy":"Delete"}}\'\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Patch a PVC:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl -n ${namespace} patch pvc ${name} -p \'{"spec": {"resources": {"requests": {"storage": "100Gi"}}}\'\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Patch StorageClass:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl patch storageclass ${name} -p '{\"allowVolumeExpansion\": true}'\n")))),(0,r.kt)("h3",{id:"create-resources"},"Create resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create a cluster using the YAML file:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} apply -f ${file}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create Namespace:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create ns ${namespace}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create Secret:"),(0,r.kt)("p",{parentName:"li"},"  Create Secret of the certificate:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} create secret generic ${secret_name} --from-file=tls.crt=${cert_path} --from-file=tls.key=${key_path} --from-file=ca.crt=${ca_path}\n")),(0,r.kt)("p",{parentName:"li"},"  Create Secret of the user id and password:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} create secret generic ${secret_name} --from-literal=user=${user} --from-literal=password=${password}\n")))),(0,r.kt)("h3",{id:"interact-with-running-pods"},"Interact with running Pods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View the PD configuration file:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} -it exec ${pod_name} -- cat /etc/pd/pd.toml\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View the TiDB configuration file:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} -it exec ${pod_name} -- cat /etc/tidb/tidb.toml\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View the TiKV configuration file:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} -it exec ${pod_name} -- cat /etc/tikv/tikv.toml\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View Pod logs:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} logs ${pod_name} -f\n")),(0,r.kt)("p",{parentName:"li"},"  View logs of the previous container:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} logs ${pod_name} -p\n")),(0,r.kt)("p",{parentName:"li"},"  If there are multiple containers in a Pod, view logs of one container:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} logs ${pod_name} -c ${container_name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Expose services:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} port-forward svc/${service_name} ${local_port}:${port_in_pod}\n")),(0,r.kt)("p",{parentName:"li"},"  Expose PD services:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} port-forward svc/${cluster_name}-pd 2379:2379\n")))),(0,r.kt)("h3",{id:"interact-with-nodes"},"Interact with nodes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mark the node as non-schedulable:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl cordon ${node_name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mark the node as schedulable:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl uncordon ${node_name}\n")))),(0,r.kt)("h3",{id:"delete-resources"},"Delete resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Delete a Pod:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete -n ${namespace} pod ${pod_name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Delete a PVC:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete -n ${namespace} pvc ${pvc_name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Delete TidbCluster:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete -n ${namespace} tc ${tc_name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Delete TidbMonitor:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete -n ${namespace} tidbmonitor ${tidb_monitor_name}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Delete TidbClusterAutoScaler:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl -n ${namespace} delete tidbclusterautoscaler ${name}\n")))),(0,r.kt)("h3",{id:"more"},"More"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/kubectl/cheatsheet/"},"kubectl Cheat Sheet")," for more kubectl usage."),(0,r.kt)("h2",{id:"helm"},"Helm"),(0,r.kt)("h3",{id:"add-helm-repository"},"Add Helm repository"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm repo add pingcap https://charts.pingcap.org/\n")),(0,r.kt)("h3",{id:"update-helm-repository"},"Update Helm repository"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm repo update\n")),(0,r.kt)("h3",{id:"view-available-helm-chart"},"View available Helm chart"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View charts in Helm Hub:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm search hub ${chart_name}\n")),(0,r.kt)("p",{parentName:"li"},"  For example:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm search hub mysql\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"View charts in other repositories:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm search repo ${chart_name} -l --devel\n")),(0,r.kt)("p",{parentName:"li"},"  For example:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm search repo tidb-operator -l --devel\n")))),(0,r.kt)("h3",{id:"get-the-default-valuesyaml-of-the-helm-chart"},"Get the default ",(0,r.kt)("inlineCode",{parentName:"h3"},"values.yaml")," of the Helm chart"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm inspect values ${chart_name} --version=${chart_version} > values.yaml\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm inspect values pingcap/tidb-operator --version=v1.2.7 > values-tidb-operator.yaml\n")),(0,r.kt)("h3",{id:"deploy-using-helm-chart"},"Deploy using Helm chart"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm install ${name} ${chart_name} --namespace=${namespace} --version=${chart_version} -f ${values_file}\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm install tidb-operator pingcap/tidb-operator --namespace=tidb-admin --version=v1.2.7 -f values-tidb-operator.yaml\n")),(0,r.kt)("h3",{id:"view-the-deployed-helm-release"},"View the deployed Helm release"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm ls\n")),(0,r.kt)("h3",{id:"update-helm-release"},"Update Helm release"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm upgrade ${name} ${chart_name} --version=${chart_version} -f ${values_file}\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm upgrade tidb-operator pingcap/tidb-operator --version=v1.2.7 -f values-tidb-operator.yaml\n")),(0,r.kt)("h3",{id:"delete-helm-release"},"Delete Helm release"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm uninstall ${name} -n ${namespace}\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm uninstall tidb-operator -n tidb-admin\n")),(0,r.kt)("h3",{id:"more-1"},"More"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://helm.sh/docs/helm/"},"Helm Commands")," for more Helm usage."))}k.isMDXComponent=!0}}]);