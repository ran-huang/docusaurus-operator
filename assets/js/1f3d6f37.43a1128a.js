"use strict";(self.webpackChunkpingcap_docs=self.webpackChunkpingcap_docs||[]).push([[3310],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),i=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=i(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=i(r),m=n,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return r?a.createElement(h,l(l({ref:t},s),{},{components:r})):a.createElement(h,l({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var i=2;i<o;i++)l[i]=r[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},561:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return i},assets:function(){return s},toc:function(){return d},default:function(){return m}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),l=["components"],p={title:"Use PD Recover to Recover the PD Cluster",summary:"Learn how to use PD Recover to recover the PD cluster."},c="Use PD Recover to Recover the PD Cluster",i={unversionedId:"pd-recover",id:"pd-recover",title:"Use PD Recover to Recover the PD Cluster",description:"PD Recover is a disaster recovery tool of PD, used to recover the PD cluster which cannot start or provide services normally. For detailed introduction of this tool, see TiDB documentation - PD Recover. This document introduces how to download PD Recover and how to use it to recover a PD cluster.",source:"@site/docs/pd-recover.md",sourceDirName:".",slug:"/pd-recover",permalink:"/pd-recover",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/pd-recover.md",tags:[],version:"current",frontMatter:{title:"Use PD Recover to Recover the PD Cluster",summary:"Learn how to use PD Recover to recover the PD cluster."},sidebar:"mySidebar",previous:{title:"Recover the Deleted Cluster",permalink:"/recover-deleted-cluster"},next:{title:"Tips for troubleshooting TiDB in Kubernetes",permalink:"/tips"}},s={},d=[{value:"Download PD Recover",id:"download-pd-recover",level:2},{value:"Recover the PD cluster",id:"recover-the-pd-cluster",level:2},{value:"Step 1: Get Cluster ID",id:"step-1-get-cluster-id",level:3},{value:"Step 2. Get Alloc ID",id:"step-2-get-alloc-id",level:3},{value:"Step 3. Recover the PD Pod",id:"step-3-recover-the-pd-pod",level:3},{value:"Step 4. Recover the cluster",id:"step-4-recover-the-cluster",level:3},{value:"Step 5. Restart the PD Pod",id:"step-5-restart-the-pd-pod",level:3},{value:"Step 6. Scale out the PD cluster",id:"step-6-scale-out-the-pd-cluster",level:3},{value:"Step 7. Restart TiDB and TiKV",id:"step-7-restart-tidb-and-tikv",level:3}],u={toc:d};function m(e){var t=e.components,r=(0,n.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"use-pd-recover-to-recover-the-pd-cluster"},"Use PD Recover to Recover the PD Cluster"),(0,o.kt)("p",null,"PD Recover is a disaster recovery tool of ",(0,o.kt)("a",{parentName:"p",href:"https://pingcap.com/docs/stable/architecture/#placement-driver-server"},"PD"),", used to recover the PD cluster which cannot start or provide services normally. For detailed introduction of this tool, see ",(0,o.kt)("a",{parentName:"p",href:"https://pingcap.com/docs/stable/reference/tools/pd-recover"},"TiDB documentation - PD Recover"),". This document introduces how to download PD Recover and how to use it to recover a PD cluster."),(0,o.kt)("h2",{id:"download-pd-recover"},"Download PD Recover"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Download the official TiDB package:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://download.pingcap.org/tidb-${version}-linux-amd64.tar.gz\n")),(0,o.kt)("p",{parentName:"li"},"In the command above, ",(0,o.kt)("inlineCode",{parentName:"p"},"${version}")," is the version of the TiDB cluster, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"v5.3.0"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Unpack the TiDB package for installation:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"tar -xzf tidb-${version}-linux-amd64.tar.gz\n")),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"pd-recover")," is in the ",(0,o.kt)("inlineCode",{parentName:"p"},"tidb-${version}-linux-amd64/bin")," directory."))),(0,o.kt)("h2",{id:"recover-the-pd-cluster"},"Recover the PD cluster"),(0,o.kt)("p",null,"This section introduces how to recover the PD cluster using PD Recover."),(0,o.kt)("h3",{id:"step-1-get-cluster-id"},"Step 1: Get Cluster ID"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get tc ${cluster_name} -n ${namespace} -o='go-template={{.status.clusterID}}{{\"\\n\"}}'\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"kubectl get tc test -n test -o='go-template={{.status.clusterID}}{{\"\\n\"}}'\n6821434242797747735\n")),(0,o.kt)("h3",{id:"step-2-get-alloc-id"},"Step 2. Get Alloc ID"),(0,o.kt)("p",null,"When you use ",(0,o.kt)("inlineCode",{parentName:"p"},"pd-recover")," to recover the PD cluster, you need to specify ",(0,o.kt)("inlineCode",{parentName:"p"},"alloc-id"),". The value of ",(0,o.kt)("inlineCode",{parentName:"p"},"alloc-id")," must be larger than the largest allocated ID (",(0,o.kt)("inlineCode",{parentName:"p"},"Alloc ID"),") of the original cluster."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Access the Prometheus monitoring data of the TiDB cluster by taking steps in ",(0,o.kt)("a",{parentName:"p",href:"/monitor-a-tidb-cluster#access-the-prometheus-monitoring-data"},"Access the Prometheus monitoring data"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Enter ",(0,o.kt)("inlineCode",{parentName:"p"},"pd_cluster_id")," in the input box and click the ",(0,o.kt)("inlineCode",{parentName:"p"},"Execute")," button to make a query. Get the largest value in the query result.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Multiply the largest value in the query result by ",(0,o.kt)("inlineCode",{parentName:"p"},"100"),". Use the multiplied value as the ",(0,o.kt)("inlineCode",{parentName:"p"},"alloc-id")," value specified when using ",(0,o.kt)("inlineCode",{parentName:"p"},"pd-recover"),"."))),(0,o.kt)("h3",{id:"step-3-recover-the-pd-pod"},"Step 3. Recover the PD Pod"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Delete the Pod of the PD cluster."),(0,o.kt)("p",{parentName:"li"},"Execute the following command to set the value of ",(0,o.kt)("inlineCode",{parentName:"p"},"spec.pd.replicas")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl patch tc ${cluster_name} -n ${namespace} --type merge -p \'{"spec":{"pd":{"replicas": 0}}}\'\n')),(0,o.kt)("p",{parentName:"li"},"Because the PD cluster is in an abnormal state, TiDB Operator cannot synchronize the change above to the PD StatefulSet. You need to execute the following command to set the ",(0,o.kt)("inlineCode",{parentName:"p"},"spec.replicas")," of the PD StatefulSet to ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl patch sts ${cluster_name}-pd -n ${namespace} -p \'{"spec":{"replicas": 0}}\'\n')),(0,o.kt)("p",{parentName:"li"},"Execute the following command to confirm that the PD Pod is deleted:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get pod -n ${namespace}\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"After confirming that all PD Pods are deleted, execute the following command to delete the PVCs bound to the PD Pods:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete pvc -l app.kubernetes.io/component=pd,app.kubernetes.io/instance=${cluster_name} -n ${namespace}\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"After the PVCs are deleted, scale out the PD cluster to one Pod:"),(0,o.kt)("p",{parentName:"li"},"Execute the following command to set the value of ",(0,o.kt)("inlineCode",{parentName:"p"},"spec.pd.replicas")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"1"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl patch tc ${cluster_name} -n ${namespace} --type merge -p \'{"spec":{"pd":{"replicas": 1}}}\'\n')),(0,o.kt)("p",{parentName:"li"},"Because the PD cluster is in an abnormal state, TiDB Operator cannot synchronize the change above to the PD StatefulSet. You need to execute the following command to set the ",(0,o.kt)("inlineCode",{parentName:"p"},"spec.replicas")," of the PD StatefulSet to ",(0,o.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl patch sts ${cluster_name}-pd -n ${namespace} -p \'{"spec":{"replicas": 1}}\'\n')),(0,o.kt)("p",{parentName:"li"},"Execute the following command to confirm that the PD Pod is started:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get pod -n ${namespace}\n")))),(0,o.kt)("h3",{id:"step-4-recover-the-cluster"},"Step 4. Recover the cluster"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Execute the ",(0,o.kt)("inlineCode",{parentName:"p"},"port-forward")," command to expose the PD service:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl port-forward -n ${namespace} svc/${cluster_name}-pd 2379:2379\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open a ",(0,o.kt)("strong",{parentName:"p"},"new")," terminal tab or window, enter the directory where ",(0,o.kt)("inlineCode",{parentName:"p"},"pd-recover")," is located, and execute the ",(0,o.kt)("inlineCode",{parentName:"p"},"pd-recover")," command to recover the PD cluster:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"./pd-recover -endpoints http://127.0.0.1:2379 -cluster-id ${cluster_id} -alloc-id ${alloc_id}\n")),(0,o.kt)("p",{parentName:"li"},"In the command above, ",(0,o.kt)("inlineCode",{parentName:"p"},"${cluster_id}")," is the cluster ID got in ",(0,o.kt)("a",{parentName:"p",href:"#step-1-get-cluster-id"},"Get Cluster ID"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"${alloc_id}")," is the largest value of ",(0,o.kt)("inlineCode",{parentName:"p"},"pd_cluster_id")," (got in ",(0,o.kt)("a",{parentName:"p",href:"#step-2-get-alloc-id"},"Get Alloc ID"),") multiplied by ",(0,o.kt)("inlineCode",{parentName:"p"},"100"),"."),(0,o.kt)("p",{parentName:"li"},"After the ",(0,o.kt)("inlineCode",{parentName:"p"},"pd-recover")," command is successfully executed, the following result is printed:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"recover success! please restart the PD cluster\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Go back to the window where the ",(0,o.kt)("inlineCode",{parentName:"p"},"port-forward")," command is executed, and then press ",(0,o.kt)("kbd",null,"Ctrl"),"+",(0,o.kt)("kbd",null,"C")," to stop and exit."))),(0,o.kt)("h3",{id:"step-5-restart-the-pd-pod"},"Step 5. Restart the PD Pod"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Delete the PD Pod:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete pod ${cluster_name}-pd-0 -n ${namespace}\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"After the Pod is started successfully, execute the ",(0,o.kt)("inlineCode",{parentName:"p"},"port-forward")," command to expose the PD service:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl port-forward -n ${namespace} svc/${cluster_name}-pd 2379:2379\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open a ",(0,o.kt)("strong",{parentName:"p"},"new")," terminal tab or window, execute the following command to confirm the Cluster ID is the one got in ",(0,o.kt)("a",{parentName:"p",href:"#step-1-get-cluster-id"},"Get Cluster ID"),"."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl 127.0.0.1:2379/pd/api/v1/cluster\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Go back to the window where the ",(0,o.kt)("inlineCode",{parentName:"p"},"port-forward")," command is executed, press ",(0,o.kt)("kbd",null,"Ctrl"),"+",(0,o.kt)("kbd",null,"C")," to stop and exit."))),(0,o.kt)("h3",{id:"step-6-scale-out-the-pd-cluster"},"Step 6. Scale out the PD cluster"),(0,o.kt)("p",null,"Execute the following command to set the value of ",(0,o.kt)("inlineCode",{parentName:"p"},"spec.pd.replicas")," to the desired number of Pods:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl patch tc ${cluster_name} -n ${namespace} --type merge -p \'{"spec":{"pd":{"replicas": $replicas}}}\n')),(0,o.kt)("h3",{id:"step-7-restart-tidb-and-tikv"},"Step 7. Restart TiDB and TiKV"),(0,o.kt)("p",null,"Use the following commands to restart the TiDB and TiKV clusters:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete pod -l app.kubernetes.io/component=tidb,app.kubernetes.io/instance=${cluster_name} -n ${namespace} &&\nkubectl delete pod -l app.kubernetes.io/component=tikv,app.kubernetes.io/instance=${cluster_name} -n ${namespace}\n")))}m.isMDXComponent=!0}}]);