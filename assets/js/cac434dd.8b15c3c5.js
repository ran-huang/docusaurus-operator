"use strict";(self.webpackChunkpingcap_docs=self.webpackChunkpingcap_docs||[]).push([[1457],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=p(n),c=r,u=f["".concat(d,".").concat(c)]||f[c]||m[c]||i;return n?a.createElement(u,o(o({ref:t},s),{},{components:n})):a.createElement(u,o({ref:t},s))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2464:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return p},assets:function(){return s},toc:function(){return m},default:function(){return c}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"TiDB Binlog Drainer Configurations in Kubernetes",summary:"Learn the configurations of a TiDB Binlog Drainer in Kubernetes."},d="TiDB Binlog Drainer Configurations in Kubernetes",p={unversionedId:"configure-tidb-binlog-drainer",id:"configure-tidb-binlog-drainer",title:"TiDB Binlog Drainer Configurations in Kubernetes",description:"This document introduces the configuration parameters for a TiDB Binlog drainer in Kubernetes.",source:"@site/docs/configure-tidb-binlog-drainer.md",sourceDirName:".",slug:"/configure-tidb-binlog-drainer",permalink:"/configure-tidb-binlog-drainer",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/configure-tidb-binlog-drainer.md",tags:[],version:"current",frontMatter:{title:"TiDB Binlog Drainer Configurations in Kubernetes",summary:"Learn the configurations of a TiDB Binlog Drainer in Kubernetes."},sidebar:"refSidebar",previous:{title:"Tools in Kubernetes",permalink:"/tidb-toolkit"},next:{title:"Configuration of tidb-cluster Chart",permalink:"/tidb-cluster-chart-config"}},s={},m=[{value:"Configuration parameters",id:"configuration-parameters",level:2}],f={toc:m};function c(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"tidb-binlog-drainer-configurations-in-kubernetes"},"TiDB Binlog Drainer Configurations in Kubernetes"),(0,i.kt)("p",null,"This document introduces the configuration parameters for a TiDB Binlog drainer in Kubernetes."),(0,i.kt)("h2",{id:"configuration-parameters"},"Configuration parameters"),(0,i.kt)("p",null,"The following table contains all configuration parameters available for the ",(0,i.kt)("inlineCode",{parentName:"p"},"tidb-drainer")," chart. Refer to ",(0,i.kt)("a",{parentName:"p",href:"/tidb-toolkit#use-helm"},"Use Helm")," to learn how to configure these parameters."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"timezone")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Timezone configuration"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"UTC"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"drainerName")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of ",(0,i.kt)("inlineCode",{parentName:"td"},"Statefulset")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'""'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"clusterName")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the source TiDB cluster"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"demo"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"clusterVersion")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The version of the source TiDB cluster"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"v3.0.1"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"baseImage")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The base image of TiDB Binlog"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"pingcap/tidb-binlog"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"imagePullPolicy")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The pulling policy of the image"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"logLevel")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The log level of the drainer process"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"info"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"storageClassName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"storageClass")," used by the drainer. ",(0,i.kt)("inlineCode",{parentName:"td"},"storageClassName")," refers to a type of storage provided by the Kubernetes cluster, which might map to a level of service quality, a backup policy, or to any policy determined by the cluster administrator. Detailed reference: ",(0,i.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/concepts/storage/storage-classes"},"storage-classes")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"local-storage"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"storage")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The storage limit of the drainer Pod. Note that you should set a larger size if ",(0,i.kt)("inlineCode",{parentName:"td"},"db-type")," is set to ",(0,i.kt)("inlineCode",{parentName:"td"},"pb")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"10Gi"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"disableDetect")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Determines whether to disable casualty detection"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"initialCommitTs")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Used to initialize a checkpoint if the drainer does not have one. The value is a string type, such as ",(0,i.kt)("inlineCode",{parentName:"td"},'"424364429251444742"')),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'"-1"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tlsCluster.enabled")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether or not to enable TLS between clusters"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The configuration file passed to the drainer. Detailed reference: ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/pingcap/tidb-binlog/blob/master/cmd/drainer/drainer.toml"},"drainer.toml")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(see below)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"resources")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The resource limits and requests of the drainer Pod"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"{}"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nodeSelector")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Ensures that the drainer Pod is only scheduled to the node with the specific key-value pair as the label. Detailed reference: ",(0,i.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector"},(0,i.kt)("inlineCode",{parentName:"a"},"nodeselector"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"{}"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerations")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Applies to drainer Pods, allowing the Pods to be scheduled to the nodes with specified taints. Detailed reference: ",(0,i.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/concepts/configuration/taint-and-toleration"},"taint-and-toleration")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"{}"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"affinity")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Defines scheduling policies and preferences of the drainer Pod. Detailed reference: ",(0,i.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity"},"affinity-and-anti-affinity")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"{}"))))),(0,i.kt)("p",null,"The default value of ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'detect-interval = 10\ncompressor = ""\n[syncer]\nworker-count = 16\ndisable-dispatch = false\nignore-schemas = "INFORMATION_SCHEMA,PERFORMANCE_SCHEMA,mysql"\nsafe-mode = false\ntxn-batch = 20\ndb-type = "file"\n[syncer.to]\ndir = "/data/pb"\n')))}c.isMDXComponent=!0}}]);