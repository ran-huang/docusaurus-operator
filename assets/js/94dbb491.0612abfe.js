"use strict";(self.webpackChunkpingcap_docs=self.webpackChunkpingcap_docs||[]).push([[545],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),o=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=o(n),d=r,k=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(k,s(s({ref:t},p),{},{components:n})):a.createElement(k,s({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var o=2;o<i;o++)s[o]=n[o];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4085:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return o},assets:function(){return p},toc:function(){return m},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),s=["components"],l={title:"Enable TLS for the MySQL Client",summary:"Learn how to enable TLS for MySQL client of the TiDB cluster on Kubernetes."},c="Enable TLS for the MySQL Client",o={unversionedId:"enable-tls-for-mysql-client",id:"enable-tls-for-mysql-client",title:"Enable TLS for the MySQL Client",description:"This document describes how to enable TLS for MySQL client of the TiDB cluster on Kubernetes. Starting from TiDB Operator v1.1, TLS for the MySQL client of the TiDB cluster on Kubernetes is supported.",source:"@site/docs/enable-tls-for-mysql-client.md",sourceDirName:".",slug:"/enable-tls-for-mysql-client",permalink:"/docusaurus-operator/enable-tls-for-mysql-client",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/enable-tls-for-mysql-client.md",tags:[],version:"current",frontMatter:{title:"Enable TLS for the MySQL Client",summary:"Learn how to enable TLS for MySQL client of the TiDB cluster on Kubernetes."},sidebar:"mySidebar",previous:{title:"Migrate TiDB to Kubernetes",permalink:"/docusaurus-operator/migrate-tidb-to-kubernetes"},next:{title:"Enable TLS between TiDB Components",permalink:"/docusaurus-operator/enable-tls-between-components"}},p={},m=[{value:"Issue two sets of certificates for the TiDB cluster",id:"issue-two-sets-of-certificates-for-the-tidb-cluster",level:2},{value:"Using <code>cfssl</code>",id:"using-cfssl",level:3},{value:"Using <code>cert-manager</code>",id:"using-cert-manager",level:3},{value:"Deploy the TiDB cluster",id:"deploy-the-tidb-cluster",level:2},{value:"Configure the MySQL client to use an encrypted connection",id:"configure-the-mysql-client-to-use-an-encrypted-connection",level:2}],u={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"enable-tls-for-the-mysql-client"},"Enable TLS for the MySQL Client"),(0,i.kt)("p",null,"This document describes how to enable TLS for MySQL client of the TiDB cluster on Kubernetes. Starting from TiDB Operator v1.1, TLS for the MySQL client of the TiDB cluster on Kubernetes is supported."),(0,i.kt)("p",null,"To enable TLS for the MySQL client, perform the following steps:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"#issue-two-sets-of-certificates-for-the-tidb-cluster"},"Issue two sets of certificates"),": a set of server-side certificates for TiDB server, and a set of client-side certificates for MySQL client. Create two Secret objects, ",(0,i.kt)("inlineCode",{parentName:"p"},"${cluster_name}-tidb-server-secret")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"${cluster_name}-tidb-client-secret"),", respectively including these two sets of certificates."),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note:")),(0,i.kt)("p",{parentName:"blockquote"},"The Secret objects you created must follow the above naming convention. Otherwise, the deployment of the TiDB cluster will fail.")),(0,i.kt)("p",{parentName:"li"},"Certificates can be issued in multiple methods. This document describes two methods. You can choose either of them to issue certificates for the TiDB cluster:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-cfssl"},"Using the ",(0,i.kt)("inlineCode",{parentName:"a"},"cfssl")," system")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-cert-manager"},"Using the ",(0,i.kt)("inlineCode",{parentName:"a"},"cert-manager")," system")))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"#deploy-the-tidb-cluster"},"Deploy the cluster"),", and set ",(0,i.kt)("inlineCode",{parentName:"p"},".spec.tidb.tlsClient.enabled")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"#configure-the-mysql-client-to-use-an-encrypted-connection"},"Configure the MySQL client to use an encrypted connection"),"."))),(0,i.kt)("p",null,"If you need to renew the existing TLS certificate, refer to ",(0,i.kt)("a",{parentName:"p",href:"/docusaurus-operator/renew-tls-certificate"},"Renew and Replace the TLS Certificate"),"."),(0,i.kt)("h2",{id:"issue-two-sets-of-certificates-for-the-tidb-cluster"},"Issue two sets of certificates for the TiDB cluster"),(0,i.kt)("p",null,"This section describes how to issue certificates for the TiDB cluster using two methods: ",(0,i.kt)("inlineCode",{parentName:"p"},"cfssl")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"cert-manager"),"."),(0,i.kt)("h3",{id:"using-cfssl"},"Using ",(0,i.kt)("inlineCode",{parentName:"h3"},"cfssl")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Download ",(0,i.kt)("inlineCode",{parentName:"p"},"cfssl")," and initialize the certificate issuer:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir -p ~/bin\ncurl -s -L -o ~/bin/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64\ncurl -s -L -o ~/bin/cfssljson https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\nchmod +x ~/bin/{cfssl,cfssljson}\nexport PATH=$PATH:~/bin\n\nmkdir -p cfssl\ncd cfssl\ncfssl print-defaults config > ca-config.json\ncfssl print-defaults csr > ca-csr.json\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Configure the client auth (CA) option in ",(0,i.kt)("inlineCode",{parentName:"p"},"ca-config.json"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "signing": {\n        "default": {\n            "expiry": "8760h"\n        },\n        "profiles": {\n            "server": {\n                "expiry": "8760h",\n                "usages": [\n                    "signing",\n                    "key encipherment",\n                    "server auth"\n                ]\n            },\n            "client": {\n                "expiry": "8760h",\n                "usages": [\n                    "signing",\n                    "key encipherment",\n                    "client auth"\n                ]\n            }\n        }\n    }\n}\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Change the certificate signing request (CSR) of ",(0,i.kt)("inlineCode",{parentName:"p"},"ca-csr.json"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "CN": "TiDB Server",\n    "CA": {\n        "expiry": "87600h"\n    },\n    "key": {\n        "algo": "rsa",\n        "size": 2048\n    },\n    "names": [\n        {\n            "C": "US",\n            "L": "CA",\n            "O": "PingCAP",\n            "ST": "Beijing",\n            "OU": "TiDB"\n        }\n    ]\n}\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Generate CA by the configured option:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl gencert -initca ca-csr.json | cfssljson -bare ca -\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Generate the server-side certificate:"),(0,i.kt)("p",{parentName:"li"},"First, create the default ",(0,i.kt)("inlineCode",{parentName:"p"},"server.json")," file:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl print-defaults csr > server.json\n")),(0,i.kt)("p",{parentName:"li"},"Then, edit this file to change the ",(0,i.kt)("inlineCode",{parentName:"p"},"CN"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"hosts")," attributes:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'...\n    "CN": "TiDB Server",\n    "hosts": [\n      "127.0.0.1",\n      "::1",\n      "${cluster_name}-tidb",\n      "${cluster_name}-tidb.${namespace}",\n      "${cluster_name}-tidb.${namespace}.svc",\n      "*.${cluster_name}-tidb",\n      "*.${cluster_name}-tidb.${namespace}",\n      "*.${cluster_name}-tidb.${namespace}.svc",\n      "*.${cluster_name}-tidb-peer",\n      "*.${cluster_name}-tidb-peer.${namespace}",\n      "*.${cluster_name}-tidb-peer.${namespace}.svc"\n    ],\n...\n')),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"${cluster_name}")," is the name of the cluster. ",(0,i.kt)("inlineCode",{parentName:"p"},"${namespace}")," is the namespace in which the TiDB cluster is deployed. You can also add your customized ",(0,i.kt)("inlineCode",{parentName:"p"},"hosts"),"."),(0,i.kt)("p",{parentName:"li"},"Finally, generate the server-side certificate:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server server.json | cfssljson -bare server\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Generate the client-side certificate:"),(0,i.kt)("p",{parentName:"li"},"First, create the default ",(0,i.kt)("inlineCode",{parentName:"p"},"client.json")," file:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl print-defaults csr > client.json\n")),(0,i.kt)("p",{parentName:"li"},"Then, edit this file to change the ",(0,i.kt)("inlineCode",{parentName:"p"},"CN"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"hosts")," attributes. You can leave the ",(0,i.kt)("inlineCode",{parentName:"p"},"hosts")," empty:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'...\n    "CN": "TiDB Client",\n    "hosts": [],\n...\n')),(0,i.kt)("p",{parentName:"li"},"Finally, generate the client-side certificate:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client client.json | cfssljson -bare client\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create the Kubernetes Secret object."),(0,i.kt)("p",{parentName:"li"},"If you have already generated two sets of certificates as described in the above steps, create the Secret object for the TiDB cluster by the following command:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create secret generic ${cluster_name}-tidb-server-secret --namespace=${namespace} --from-file=tls.crt=server.pem --from-file=tls.key=server-key.pem --from-file=ca.crt=ca.pem\nkubectl create secret generic ${cluster_name}-tidb-client-secret --namespace=${namespace} --from-file=tls.crt=client.pem --from-file=tls.key=client-key.pem --from-file=ca.crt=ca.pem\n")),(0,i.kt)("p",{parentName:"li"},"You have created two Secret objects for the server-side and client-side certificates:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The TiDB server loads one Secret object when it starts"),(0,i.kt)("li",{parentName:"ul"},"The MySQL client uses another Secret object when it connects to the TiDB cluster")))),(0,i.kt)("p",null,"You can generate multiple sets of client-side certificates. At least one set of client-side certificates is needed for the internal components of TiDB Operator to access the TiDB server. Currently, ",(0,i.kt)("inlineCode",{parentName:"p"},"TidbInitializer")," accesses the TiDB server to set the password or perform initialization."),(0,i.kt)("h3",{id:"using-cert-manager"},"Using ",(0,i.kt)("inlineCode",{parentName:"h3"},"cert-manager")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Install ",(0,i.kt)("inlineCode",{parentName:"p"},"cert-manager"),"."),(0,i.kt)("p",{parentName:"li"},"Refer to ",(0,i.kt)("a",{parentName:"p",href:"https://docs.cert-manager.io/en/release-0.11/getting-started/install/kubernetes.html"},"cert-manager installation in Kubernetes"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create an Issuer to issue certificates for the TiDB cluster."),(0,i.kt)("p",{parentName:"li"},"To configure ",(0,i.kt)("inlineCode",{parentName:"p"},"cert-manager"),", create the Issuer resources."),(0,i.kt)("p",{parentName:"li"},"First, create a directory which saves the files that ",(0,i.kt)("inlineCode",{parentName:"p"},"cert-manager")," needs to create certificates:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir -p cert-manager\ncd cert-manager\n")),(0,i.kt)("p",{parentName:"li"},"Then, create a ",(0,i.kt)("inlineCode",{parentName:"p"},"tidb-server-issuer.yaml")," file with the following content:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: ${cluster_name}-selfsigned-ca-issuer\n  namespace: ${namespace}\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-ca\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-ca-secret\n  commonName: "TiDB CA"\n  isCA: true\n  duration: 87600h # 10yrs\n  renewBefore: 720h # 30d\n  issuerRef:\n    name: ${cluster_name}-selfsigned-ca-issuer\n    kind: Issuer\n---\napiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: ${cluster_name}-tidb-issuer\n  namespace: ${namespace}\nspec:\n  ca:\n    secretName: ${cluster_name}-ca-secret\n')),(0,i.kt)("p",{parentName:"li"},"This ",(0,i.kt)("inlineCode",{parentName:"p"},".yaml")," file creates three objects:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"An Issuer object of SelfSigned class, used to generate the CA certificate needed by Issuer of CA class"),(0,i.kt)("li",{parentName:"ul"},"A Certificate object, whose ",(0,i.kt)("inlineCode",{parentName:"li"},"isCa")," is set to ",(0,i.kt)("inlineCode",{parentName:"li"},"true")),(0,i.kt)("li",{parentName:"ul"},"An Issuer, used to issue TLS certificates for the TiDB server")),(0,i.kt)("p",{parentName:"li"},"Finally, execute the following command to create an Issuer:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f tidb-server-issuer.yaml\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Generate the server-side certificate."),(0,i.kt)("p",{parentName:"li"},"In ",(0,i.kt)("inlineCode",{parentName:"p"},"cert-manager"),", the Certificate resource represents the certificate interface. This certificate is issued and updated by the Issuer created in Step 2."),(0,i.kt)("p",{parentName:"li"},"First, create a ",(0,i.kt)("inlineCode",{parentName:"p"},"tidb-server-cert.yaml")," file with the following content:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-tidb-server-secret\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-tidb-server-secret\n  duration: 8760h # 365d\n  renewBefore: 360h # 15d\n  subject:\n    organizations:\n    - PingCAP\n  commonName: "TiDB Server"\n  usages:\n    - server auth\n  dnsNames:\n    - "${cluster_name}-tidb"\n    - "${cluster_name}-tidb.${namespace}"\n    - "${cluster_name}-tidb.${namespace}.svc"\n    - "*.${cluster_name}-tidb"\n    - "*.${cluster_name}-tidb.${namespace}"\n    - "*.${cluster_name}-tidb.${namespace}.svc"\n    - "*.${cluster_name}-tidb-peer"\n    - "*.${cluster_name}-tidb-peer.${namespace}"\n    - "*.${cluster_name}-tidb-peer.${namespace}.svc"\n  ipAddresses:\n    - 127.0.0.1\n    - ::1\n  issuerRef:\n    name: ${cluster_name}-tidb-issuer\n    kind: Issuer\n    group: cert-manager.io\n')),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"${cluster_name}")," is the name of the cluster. Configure the items as follows:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Set ",(0,i.kt)("inlineCode",{parentName:"li"},"spec.secretName")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"${cluster_name}-tidb-server-secret")),(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"server auth")," in ",(0,i.kt)("inlineCode",{parentName:"li"},"usages")),(0,i.kt)("li",{parentName:"ul"},"Add the following 6 DNSs in ",(0,i.kt)("inlineCode",{parentName:"li"},"dnsNames"),". You can also add other DNSs according to your needs:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"${cluster_name}-tidb")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"${cluster_name}-tidb.${namespace}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"${cluster_name}-tidb.${namespace}.svc")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"*.${cluster_name}-tidb")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"*.${cluster_name}-tidb.${namespace}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"*.${cluster_name}-tidb.${namespace}.svc")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"*.${cluster_name}-tidb-peer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"*.${cluster_name}-tidb-peer.${namespace}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"*.${cluster_name}-tidb-peer.${namespace}.svc")))),(0,i.kt)("li",{parentName:"ul"},"Add the following 2 IPs in ",(0,i.kt)("inlineCode",{parentName:"li"},"ipAddresses"),". You can also add other IPs according to your needs:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"127.0.0.1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"::1")))),(0,i.kt)("li",{parentName:"ul"},"Add the Issuer created above in the ",(0,i.kt)("inlineCode",{parentName:"li"},"issuerRef")),(0,i.kt)("li",{parentName:"ul"},"For other attributes, refer to ",(0,i.kt)("a",{parentName:"li",href:"https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec"},"cert-manager API"),".")),(0,i.kt)("p",{parentName:"li"},"Execute the following command to generate the certificate:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f tidb-server-cert.yaml\n")),(0,i.kt)("p",{parentName:"li"},"After the object is created, cert-manager generates a ",(0,i.kt)("inlineCode",{parentName:"p"},"${cluster_name}-tidb-server-secret")," Secret object to be used by the TiDB server.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Generate the client-side certificate:"),(0,i.kt)("p",{parentName:"li"},"Create a ",(0,i.kt)("inlineCode",{parentName:"p"},"tidb-client-cert.yaml")," file with the following content:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-tidb-client-secret\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-tidb-client-secret\n  duration: 8760h # 365d\n  renewBefore: 360h # 15d\n  subject:\n    organizations:\n    - PingCAP\n  commonName: "TiDB Client"\n  usages:\n    - client auth\n  issuerRef:\n    name: ${cluster_name}-tidb-issuer\n    kind: Issuer\n    group: cert-manager.io\n')),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"${cluster_name}")," is the name of the cluster. Configure the items as follows:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Set ",(0,i.kt)("inlineCode",{parentName:"li"},"spec.secretName")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"${cluster_name}-tidb-client-secret")),(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"client auth")," in ",(0,i.kt)("inlineCode",{parentName:"li"},"usages")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dnsNames")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"ipAddresses")," are not required"),(0,i.kt)("li",{parentName:"ul"},"Add the Issuer created above in the ",(0,i.kt)("inlineCode",{parentName:"li"},"issuerRef")),(0,i.kt)("li",{parentName:"ul"},"For other attributes, refer to ",(0,i.kt)("a",{parentName:"li",href:"https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec"},"cert-manager API"))),(0,i.kt)("p",{parentName:"li"},"Execute the following command to generate the certificate:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f tidb-client-cert.yaml\n")),(0,i.kt)("p",{parentName:"li"},"After the object is created, cert-manager generates a ",(0,i.kt)("inlineCode",{parentName:"p"},"${cluster_name}-tidb-client-secret")," Secret object to be used by the TiDB client.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create multiple sets of client-side certificates (optional)."),(0,i.kt)("p",{parentName:"li"},"Four components in the TiDB Operator cluster need to request the TiDB server. When TLS is enabled, these components can use certificates to request the TiDB server, each with a separate certificate. The four components are listed as follows:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"TidbInitializer"),(0,i.kt)("li",{parentName:"ul"},"PD Dashboard"),(0,i.kt)("li",{parentName:"ul"},"Backup"),(0,i.kt)("li",{parentName:"ul"},"Restore")),(0,i.kt)("p",{parentName:"li"},"If you need to ",(0,i.kt)("a",{parentName:"p",href:"/docusaurus-operator/restore-data-using-tidb-lightning"},"restore data using TiDB Lightning"),", you need to generate a server-side certificate for the TiDB Lightning component."),(0,i.kt)("p",{parentName:"li"},"To create certificates for these components, take the following steps:"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create a ",(0,i.kt)("inlineCode",{parentName:"p"},"tidb-components-client-cert.yaml")," file with the following content:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-tidb-initializer-client-secret\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-tidb-initializer-client-secret\n  duration: 8760h # 365d\n  renewBefore: 360h # 15d\n  subject:\n    organizations:\n    - PingCAP\n  commonName: "TiDB Initializer client"\n  usages:\n    - client auth\n  issuerRef:\n    name: ${cluster_name}-tidb-issuer\n    kind: Issuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-pd-dashboard-client-secret\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-pd-dashboard-client-secret\n  duration: 8760h # 365d\n  renewBefore: 360h # 15d\n  subject:\n    organizations:\n    - PingCAP\n  commonName: "PD Dashboard client"\n  usages:\n    - client auth\n  issuerRef:\n    name: ${cluster_name}-tidb-issuer\n    kind: Issuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-backup-client-secret\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-backup-client-secret\n  duration: 8760h # 365d\n  renewBefore: 360h # 15d\n  subject:\n    organizations:\n    - PingCAP\n  commonName: "Backup client"\n  usages:\n    - client auth\n  issuerRef:\n    name: ${cluster_name}-tidb-issuer\n    kind: Issuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-restore-client-secret\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-restore-client-secret\n  duration: 8760h # 365d\n  renewBefore: 360h # 15d\n  subject:\n    organizations:\n    - PingCAP\n  commonName: "Restore client"\n  usages:\n    - client auth\n  issuerRef:\n    name: ${cluster_name}-tidb-issuer\n    kind: Issuer\n    group: cert-manager.io\n')),(0,i.kt)("p",{parentName:"li"},"In the ",(0,i.kt)("inlineCode",{parentName:"p"},".yaml")," file above, ",(0,i.kt)("inlineCode",{parentName:"p"},"${cluster_name}")," is the name of the cluster. Configure the items as follows:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Set the value of ",(0,i.kt)("inlineCode",{parentName:"li"},"spec.secretName")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"${cluster_name}-${component}-client-secret"),"."),(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"client auth")," in ",(0,i.kt)("inlineCode",{parentName:"li"},"usages"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dnsNames")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"ipAddresses")," are not required."),(0,i.kt)("li",{parentName:"ul"},"Add the Issuer created above in the ",(0,i.kt)("inlineCode",{parentName:"li"},"issuerRef"),"."),(0,i.kt)("li",{parentName:"ul"},"For other attributes, refer to ",(0,i.kt)("a",{parentName:"li",href:"https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec"},"cert-manager API"),".")),(0,i.kt)("p",{parentName:"li"},"To generate a client-side certificate for TiDB Lightning, use the following content and set ",(0,i.kt)("inlineCode",{parentName:"p"},"tlsCluster.tlsClientSecretName")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"${cluster_name}-lightning-client-secret")," in TiDB Lightning's ",(0,i.kt)("inlineCode",{parentName:"p"},"values.yaml")," file."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-lightning-client-secret\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-lightning-client-secret\n  duration: 8760h # 365d\n  renewBefore: 360h # 15d\n  subject:\n    organizations:\n    - PingCAP\n  commonName: "Lightning client"\n  usages:\n    - client auth\n  issuerRef:\n    name: ${cluster_name}-tidb-issuer\n    kind: Issuer\n    group: cert-manager.io\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create the certificate by running the following command:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f tidb-components-client-cert.yaml\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"After creating these objects, cert-manager will generate four secret objects for the four components."))),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note:")),(0,i.kt)("p",{parentName:"blockquote"},"TiDB server's TLS is compatible with the MySQL protocol. When the certificate content is changed, the administrator needs to manually execute the SQL statement ",(0,i.kt)("inlineCode",{parentName:"p"},"alter instance reload tls")," to refresh the content.")))),(0,i.kt)("h2",{id:"deploy-the-tidb-cluster"},"Deploy the TiDB cluster"),(0,i.kt)("p",null,"In this step, you create a TiDB cluster and perform the following operations:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Enable TLS for the MySQL client"),(0,i.kt)("li",{parentName:"ul"},"Initialize the cluster (an ",(0,i.kt)("inlineCode",{parentName:"li"},"app")," database is created for demonstration)"),(0,i.kt)("li",{parentName:"ul"},"Create a Backup object to back up the cluster"),(0,i.kt)("li",{parentName:"ul"},"Create a Restore object to restore the cluster"),(0,i.kt)("li",{parentName:"ul"},"Use separate client-side certificates for ",(0,i.kt)("inlineCode",{parentName:"li"},"TidbInitializer"),", PD Dashboard, Backup, and Restore (specified by ",(0,i.kt)("inlineCode",{parentName:"li"},"tlsClientSecretName"),")")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create three ",(0,i.kt)("inlineCode",{parentName:"p"},".yaml")," files:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"tidb-cluster.yaml")," file:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: pingcap.com/v1alpha1\nkind: TidbCluster\nmetadata:\n  name: ${cluster_name}\n  namespace: ${namespace}\nspec:\n  version: v5.3.0\n  timezone: UTC\n  pvReclaimPolicy: Retain\n  pd:\n    baseImage: pingcap/pd\n    maxFailoverCount: 0\n    replicas: 1\n    requests:\n      storage: "10Gi"\n    config: {}\n    tlsClientSecretName: ${cluster_name}-pd-dashboard-client-secret\n  tikv:\n    baseImage: pingcap/tikv\n    maxFailoverCount: 0\n    replicas: 1\n    requests:\n      storage: "100Gi"\n    config: {}\n  tidb:\n    baseImage: pingcap/tidb\n    maxFailoverCount: 0\n    replicas: 1\n    service:\n      type: ClusterIP\n    config: {}\n    tlsClient:\n      enabled: true\n---\napiVersion: pingcap.com/v1alpha1\nkind: TidbInitializer\nmetadata:\n  name: ${cluster_name}-init\n  namespace: ${namespace}\nspec:\n  image: tnir/mysqlclient\n  cluster:\n    namespace: ${namespace}\n    name: ${cluster_name}\n  initSql: |-\n    create database app;\n  tlsClientSecretName: ${cluster_name}-tidb-initializer-client-secret\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"backup.yaml"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"apiVersion: pingcap.com/v1alpha1\nkind: Backup\nmetadata:\n  name: ${cluster_name}-backup\n  namespace: ${namespace}\nspec:\n  backupType: full\n  br:\n  cluster: ${cluster_name}\n  clusterNamespace: ${namespace}\n  sendCredToTikv: true\n  from:\n    host: ${host}\n    secretName: ${tidb_secret}\n    port: 4000\n    user: root\n    tlsClientSecretName: ${cluster_name}-backup-client-secret\n  s3:\n    provider: aws\n    region: ${my_region}\n    secretName: ${s3_secret}\n    bucket: ${my_bucket}\n    prefix: ${my_folder}\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"restore.yaml"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"apiVersion: pingcap.com/v1alpha1\nkind: Restore\nmetadata:\n  name: ${cluster_name}-restore\n  namespace: ${namespace}\nspec:\n  backupType: full\n  br:\n    cluster: ${cluster_name}\n    clusterNamespace: ${namespace}\n    sendCredToTikv: true\n  to:\n    host: ${host}\n    secretName: ${tidb_secret}\n    port: 4000\n    user: root\n    tlsClientSecretName: ${cluster_name}-restore-client-secret\n  s3:\n    provider: aws\n    region: ${my_region}\n    secretName: ${s3_secret}\n    bucket: ${my_bucket}\n    prefix: ${my_folder}\n")))),(0,i.kt)("p",{parentName:"li"},"In the above file, ",(0,i.kt)("inlineCode",{parentName:"p"},"${cluster_name}")," is the name of the cluster, and ",(0,i.kt)("inlineCode",{parentName:"p"},"${namespace}")," is the namespace in which the TiDB cluster is deployed. To enable TLS for the MySQL client, set ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.tidb.tlsClient.enabled")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Deploy the TiDB cluster:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f tidb-cluster.yaml\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Back up the cluster:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f backup.yaml\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Restore the cluster:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f restore.yaml\n")))),(0,i.kt)("h2",{id:"configure-the-mysql-client-to-use-an-encrypted-connection"},"Configure the MySQL client to use an encrypted connection"),(0,i.kt)("p",null,"To connect the MySQL client with the TiDB cluster, use the client-side certificate created above and take the following methods. For details, refer to ",(0,i.kt)("a",{parentName:"p",href:"https://pingcap.com/docs/stable/how-to/secure/enable-tls-clients/#configure-the-mysql-client-to-use-encrypted-connections"},"Configure the MySQL client to use encrypted connections"),"."),(0,i.kt)("p",null,"Execute the following command to acquire the client-side certificate and connect to the TiDB server:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get secret -n ${namespace} ${cluster_name}-tidb-client-secret  -ojsonpath='{.data.tls\\.crt}' | base64 --decode > client-tls.crt\nkubectl get secret -n ${namespace} ${cluster_name}-tidb-client-secret  -ojsonpath='{.data.tls\\.key}' | base64 --decode > client-tls.key\nkubectl get secret -n ${namespace} ${cluster_name}-tidb-client-secret  -ojsonpath='{.data.ca\\.crt}'  | base64 --decode > client-ca.crt\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mysql -uroot -p -P 4000 -h ${tidb_host} --ssl-cert=client-tls.crt --ssl-key=client-tls.key --ssl-ca=client-ca.crt\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_default_authentication_plugin"},"The default authentication plugin of MySQL 8.0")," is updated from ",(0,i.kt)("inlineCode",{parentName:"p"},"mysql_native_password")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"caching_sha2_password"),". Therefore, if you use MySQL client from MySQL 8.0 to access the TiDB service (TiDB version < v4.0.7), and if the user account has a password, you need to explicitly specify the ",(0,i.kt)("inlineCode",{parentName:"p"},"--default-auth=mysql_native_password")," parameter."))),(0,i.kt)("p",null,"Finally, to verify whether TLS is successfully enabled, refer to ",(0,i.kt)("a",{parentName:"p",href:"https://pingcap.com/docs/stable/enable-tls-between-clients-and-servers/#check-whether-the-current-connection-uses-encryption"},"checking the current connection"),"."))}d.isMDXComponent=!0}}]);