"use strict";(self.webpackChunkpingcap_docs=self.webpackChunkpingcap_docs||[]).push([[670],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=m(n),d=r,g=u["".concat(p,".").concat(d)]||u[d]||c[d]||o;return n?a.createElement(g,i(i({ref:t},s),{},{components:n})):a.createElement(g,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5545:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return m},assets:function(){return s},toc:function(){return c},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={title:"Migrate from Helm 2 to Helm 3",summary:"Learn how to migrate from Helm 2 to Helm 3."},p="Migrate from Helm 2 to Helm 3",m={unversionedId:"migrate-to-helm3",id:"migrate-to-helm3",title:"Migrate from Helm 2 to Helm 3",description:"This document describes how to migrate component management from Helm 2 to Helm 3. This document takes TiDB Operator as an example. For other components, you can take similar steps to perform the migration.",source:"@site/docs/migrate-to-helm3.md",sourceDirName:".",slug:"/migrate-to-helm3",permalink:"/docusaurus-operator/migrate-to-helm3",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/migrate-to-helm3.md",tags:[],version:"current",frontMatter:{title:"Migrate from Helm 2 to Helm 3",summary:"Learn how to migrate from Helm 2 to Helm 3."},sidebar:"mySidebar",previous:{title:"Maintain Kubernetes Nodes that Hold the TiDB Cluster",permalink:"/docusaurus-operator/maintain-a-kubernetes-node"},next:{title:"Deploy Monitoring and Alerts for a TiDB Cluster",permalink:"/docusaurus-operator/monitor-a-tidb-cluster"}},s={},c=[{value:"Migration procedure",id:"migration-procedure",level:2}],u={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"migrate-from-helm-2-to-helm-3"},"Migrate from Helm 2 to Helm 3"),(0,o.kt)("p",null,"This document describes how to migrate component management from Helm 2 to Helm 3. This document takes TiDB Operator as an example. For other components, you can take similar steps to perform the migration."),(0,o.kt)("p",null,"For more information about migrating releases managed by Helm 2 to Helm 3, refer to ",(0,o.kt)("a",{parentName:"p",href:"https://helm.sh/docs/topics/v2_v3_migration/"},"Helm documentation"),"."),(0,o.kt)("h2",{id:"migration-procedure"},"Migration procedure"),(0,o.kt)("p",null,"In this example, TiDB Operator (",(0,o.kt)("inlineCode",{parentName:"p"},"tidb-operator"),") managed by Helm 2 is installed in the ",(0,o.kt)("inlineCode",{parentName:"p"},"tidb-admin")," namespace. A ",(0,o.kt)("inlineCode",{parentName:"p"},"basic")," TidbCluster and ",(0,o.kt)("inlineCode",{parentName:"p"},"basic")," TidbMonitor are deployed in the ",(0,o.kt)("inlineCode",{parentName:"p"},"tidb-cluster")," namespace."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"helm list\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"NAME            REVISION        UPDATED                         STATUS          CHART                   APP VERSION     NAMESPACE\ntidb-operator   1               Tue Jan  5 15:28:00 2021        DEPLOYED        tidb-operator-v1.1.8    v1.1.8          tidb-admin\n")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://helm.sh/docs/intro/install/"},"Install Helm 3"),"."),(0,o.kt)("p",{parentName:"li"},"Helm 3 takes a different approach from Helm 2 in configuration and data storage. Therefore, when you install Helm 3, there is no risk of overwriting the original configuration and data."),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")),(0,o.kt)("p",{parentName:"blockquote"},"During the installation, do not let the CLI binary of Helm 3 overwrite that of Helm 2.  For example, you can name Helm 3 CLI binary as ",(0,o.kt)("inlineCode",{parentName:"p"},"helm3"),". (All following examples in this document uses ",(0,o.kt)("inlineCode",{parentName:"p"},"helm3"),".)"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Install ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/helm/helm-2to3"},"helm-2to3 plugin")," for Helm 3."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"helm3 plugin install https://github.com/helm/helm-2to3\n")),(0,o.kt)("p",{parentName:"li"},"You can verify whether the plugin is successfully installed by running the following command:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"helm3 plugin list\n")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"NAME    VERSION DESCRIPTION\n2to3    0.8.0   migrate and cleanup Helm v2 configuration and releases in-place to Helm v3\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Migrate the configuration such as repositories and plugins from Helm 2 to Helm 3:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"helm3 2to3 move config\n")),(0,o.kt)("p",{parentName:"li"},"Before you migrate, you can learn about the possible operations and their consequences by executing ",(0,o.kt)("inlineCode",{parentName:"p"},"helm3 2to3 move config --dry-run"),"."),(0,o.kt)("p",{parentName:"li"},"After the migration, the PingCAP repository is already in Helm 3:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"helm3 repo list\n")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"NAME    URL\npingcap https://charts.pingcap.org/\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Migrate the releases from Helm 2 to Helm 3:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"helm3 2to3 convert tidb-operator\n")),(0,o.kt)("p",{parentName:"li"},"Before you migrate, you can learn about the possible operations and their consequences by executing ",(0,o.kt)("inlineCode",{parentName:"p"},"helm3 2to3 convert tidb-operator --dry-run"),"."),(0,o.kt)("p",{parentName:"li"},"After the migration, you can view the release corresponding to TiDB Operator in Helm 3:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"helm3 list --namespace=tidb-admin\n")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"NAME            NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                   APP VERSION\ntidb-operator   tidb-admin      1               2021-01-05 07:28:00.3545941 +0000 UTC   deployed        tidb-operator-v1.1.8    v1.1.8\n")),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")),(0,o.kt)("p",{parentName:"blockquote"},"If the original Helm 2 is Tillerless (Tiller is installed locally via plugins like ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/rimusz/helm-tiller"},"helm-tiller")," rather than in the Kubernetes cluster), you can migrate the release by adding the ",(0,o.kt)("inlineCode",{parentName:"p"},"--tiller-out-cluster")," flag in the command: ",(0,o.kt)("inlineCode",{parentName:"p"},"helm3 2to3 convert tidb-operator --tiller-out-cluster"),"."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Confirm that TiDB Operator, TidbCluster, and TidbMonitor run normally."),(0,o.kt)("p",{parentName:"li"},"To view the running status of TiDB Operator:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get pods --namespace=tidb-admin -l app.kubernetes.io/instance=tidb-operator\n")),(0,o.kt)("p",{parentName:"li"},"If all Pods are in the Running state, TiDB Operator runs normally:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"NAME                                       READY   STATUS    RESTARTS   AGE\ntidb-controller-manager-6d8d5c6d64-b8lv4   1/1     Running   0          2m22s\ntidb-scheduler-644d59b46f-4f6sb            2/2     Running   0          2m22s\n")),(0,o.kt)("p",{parentName:"li"},"To view the running status of TidbCluster and TidbMonitor:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"watch kubectl get pods --namespace=tidb-cluster\n")),(0,o.kt)("p",{parentName:"li"},"If all Pods are in the Running state, TidbCluster and TidbMonitor runs normally:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"NAME                              READY   STATUS    RESTARTS   AGE\nbasic-discovery-6bb656bfd-xl5pb   1/1     Running   0          9m9s\nbasic-monitor-5fc8589c89-gvgjj    3/3     Running   0          8m58s\nbasic-pd-0                        1/1     Running   0          9m8s\nbasic-tidb-0                      2/2     Running   0          7m14s\nbasic-tikv-0                      1/1     Running   0          8m13s\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Clean up Helm 2 data, such as configuration and releases:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"helm3 2to3 cleanup --name=tidb-operator\n")),(0,o.kt)("p",{parentName:"li"},"Before you clean up the data, you can learn about the possible operations and their consequences by executing ",(0,o.kt)("inlineCode",{parentName:"p"},"helm3 2to3 cleanup --name=tidb-operator --dry-run"),"."),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")),(0,o.kt)("p",{parentName:"blockquote"},"After the cleanup, you can no longer manage the releases using Helm 2.")))))}d.isMDXComponent=!0}}]);