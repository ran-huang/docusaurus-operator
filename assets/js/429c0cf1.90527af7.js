"use strict";(self.webpackChunkpingcap_docs=self.webpackChunkpingcap_docs||[]).push([[4067],{3905:function(e,t,a){a.d(t,{Zo:function(){return o},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),m=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},o=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),d=m(a),u=r,k=d["".concat(c,".").concat(u)]||d[u]||p[u]||s;return a?n.createElement(k,l(l({ref:t},o),{},{components:a})):n.createElement(k,l({ref:t},o))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var m=2;m<s;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8758:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return m},assets:function(){return o},toc:function(){return p},default:function(){return u}});var n=a(7462),r=a(3366),s=(a(7294),a(3905)),l=["components"],i={title:"Enable TLS for DM",summary:"Learn how to enable TLS for DM in Kubernetes."},c="Enable TLS for DM",m={unversionedId:"enable-tls-for-dm",id:"enable-tls-for-dm",title:"Enable TLS for DM",description:"This document describes how to enable TLS between components of the DM cluster in Kubernetes and how to use DM to migrate data between MySQL/TiDB databases that enable TLS for the MySQL client.",source:"@site/docs/enable-tls-for-dm.md",sourceDirName:".",slug:"/enable-tls-for-dm",permalink:"/enable-tls-for-dm",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/enable-tls-for-dm.md",tags:[],version:"current",frontMatter:{title:"Enable TLS for DM",summary:"Learn how to enable TLS for DM in Kubernetes."},sidebar:"mySidebar",previous:{title:"Enable TLS between TiDB Components",permalink:"/enable-tls-between-components"},next:{title:"Replicate Data to TLS-enabled Downstream Services",permalink:"/enable-tls-for-ticdc-sink"}},o={},p=[{value:"Enable TLS between DM components",id:"enable-tls-between-dm-components",level:2},{value:"Generate certificates for components of the DM cluster",id:"generate-certificates-for-components-of-the-dm-cluster",level:3},{value:"Using <code>cfssl</code>",id:"using-cfssl",level:4},{value:"Using <code>cert-manager</code>",id:"using-cert-manager",level:4},{value:"Deploy the DM cluster",id:"deploy-the-dm-cluster",level:3},{value:"Configure <code>dmctl</code> and connect to the cluster",id:"configure-dmctl-and-connect-to-the-cluster",level:3},{value:"Use DM to migrate data between MySQL/TiDB databases that enable TLS for the MySQL client",id:"use-dm-to-migrate-data-between-mysqltidb-databases-that-enable-tls-for-the-mysql-client",level:2},{value:"Step 1: Create the Kubernetes Secret object for each TLS-enabled MySQL",id:"step-1-create-the-kubernetes-secret-object-for-each-tls-enabled-mysql",level:3},{value:"Step 2: Mount the Secret objects to the DM cluster",id:"step-2-mount-the-secret-objects-to-the-dm-cluster",level:3},{value:"Step 3: Modify the data source and migration task configuration",id:"step-3-modify-the-data-source-and-migration-task-configuration",level:3},{value:"Step 4: Start the migration tasks",id:"step-4-start-the-migration-tasks",level:3}],d={toc:p};function u(e){var t=e.components,a=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"enable-tls-for-dm"},"Enable TLS for DM"),(0,s.kt)("p",null,"This document describes how to enable TLS between components of the DM cluster in Kubernetes and how to use DM to migrate data between MySQL/TiDB databases that enable TLS for the MySQL client."),(0,s.kt)("h2",{id:"enable-tls-between-dm-components"},"Enable TLS between DM components"),(0,s.kt)("p",null,"Starting from v1.2, TiDB Operator supports enabling TLS between components of the DM cluster in Kubernetes."),(0,s.kt)("p",null,"To enable TLS between components of the DM cluster, perform the following steps:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Generate certificates for each component of the DM cluster to be created:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"A set of server-side certificates for the DM-master/DM-worker component, saved as the Kubernetes Secret objects: ",(0,s.kt)("inlineCode",{parentName:"li"},"${cluster_name}-${component_name}-cluster-secret")),(0,s.kt)("li",{parentName:"ul"},"A set of shared client-side certificates for the various clients of each component, saved as the Kubernetes Secret objects: ",(0,s.kt)("inlineCode",{parentName:"li"},"${cluster_name}-dm-client-secret"),".")),(0,s.kt)("blockquote",{parentName:"li"},(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"Note:")),(0,s.kt)("p",{parentName:"blockquote"},"The Secret objects you created must follow the above naming convention. Otherwise, the deployment of the DM cluster will fail."))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Deploy the cluster, and set ",(0,s.kt)("inlineCode",{parentName:"p"},".spec.tlsCluster.enabled")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,s.kt)("blockquote",{parentName:"li"},(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"Note:")),(0,s.kt)("p",{parentName:"blockquote"},"After the cluster is created, do not modify this field; otherwise, the cluster will fail to upgrade."))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Configure ",(0,s.kt)("inlineCode",{parentName:"p"},"dmctl")," to connect to the cluster."))),(0,s.kt)("p",null,"Certificates can be issued in multiple methods. This document describes two methods. You can choose either of them to issue certificates for the DM cluster:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#using-cfssl"},"Using the ",(0,s.kt)("inlineCode",{parentName:"a"},"cfssl")," system")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#using-cert-manager"},"Using the ",(0,s.kt)("inlineCode",{parentName:"a"},"cert-manager")," system"))),(0,s.kt)("p",null,"If you need to renew the existing TLS certificate, refer to ",(0,s.kt)("a",{parentName:"p",href:"/renew-tls-certificate"},"Renew and Replace the TLS Certificate"),"."),(0,s.kt)("h3",{id:"generate-certificates-for-components-of-the-dm-cluster"},"Generate certificates for components of the DM cluster"),(0,s.kt)("p",null,"This section describes how to issue certificates using two methods: ",(0,s.kt)("inlineCode",{parentName:"p"},"cfssl")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"cert-manager"),"."),(0,s.kt)("h4",{id:"using-cfssl"},"Using ",(0,s.kt)("inlineCode",{parentName:"h4"},"cfssl")),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Download ",(0,s.kt)("inlineCode",{parentName:"p"},"cfssl")," and initialize the certificate issuer:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir -p ~/bin\ncurl -s -L -o ~/bin/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64\ncurl -s -L -o ~/bin/cfssljson https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\nchmod +x ~/bin/{cfssl,cfssljson}\nexport PATH=$PATH:~/bin\n\nmkdir -p cfssl\ncd cfssl\n"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Generate the ",(0,s.kt)("inlineCode",{parentName:"p"},"ca-config.json")," configuration file:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'cat << EOF > ca-config.json\n{\n    "signing": {\n        "default": {\n            "expiry": "8760h"\n        },\n        "profiles": {\n            "internal": {\n                "expiry": "8760h",\n                "usages": [\n                    "signing",\n                    "key encipherment",\n                    "server auth",\n                    "client auth"\n                ]\n            },\n            "client": {\n                "expiry": "8760h",\n                "usages": [\n                    "signing",\n                    "key encipherment",\n                    "client auth"\n                ]\n            }\n        }\n    }\n}\nEOF\n'))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Generate the ",(0,s.kt)("inlineCode",{parentName:"p"},"ca-csr.json")," configuration file:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'cat << EOF > ca-csr.json\n{\n    "CN": "TiDB",\n    "CA": {\n        "expiry": "87600h"\n    },\n    "key": {\n        "algo": "rsa",\n        "size": 2048\n    },\n    "names": [\n        {\n            "C": "US",\n            "L": "CA",\n            "O": "PingCAP",\n            "ST": "Beijing",\n            "OU": "TiDB"\n        }\n    ]\n}\nEOF\n'))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Generate CA by the configured option:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl gencert -initca ca-csr.json | cfssljson -bare ca -\n"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Generate the server-side certificates:"),(0,s.kt)("p",{parentName:"li"},"In this step, a set of server-side certificate is created for each component of the DM cluster."),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"DM-master"),(0,s.kt)("p",{parentName:"li"},"  First, generate the default ",(0,s.kt)("inlineCode",{parentName:"p"},"dm-master-server.json")," file:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl print-defaults csr > dm-master-server.json\n")),(0,s.kt)("p",{parentName:"li"},"  Then, edit this file to change the ",(0,s.kt)("inlineCode",{parentName:"p"},"CN")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"hosts")," attributes:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-json"},'...\n    "CN": "TiDB",\n    "hosts": [\n      "127.0.0.1",\n      "::1",\n      "${cluster_name}-dm-master",\n      "${cluster_name}-dm-master.${namespace}",\n      "${cluster_name}-dm-master.${namespace}.svc",\n      "${cluster_name}-dm-master-peer",\n      "${cluster_name}-dm-master-peer.${namespace}",\n      "${cluster_name}-dm-master-peer.${namespace}.svc",\n      "*.${cluster_name}-dm-master-peer",\n      "*.${cluster_name}-dm-master-peer.${namespace}",\n      "*.${cluster_name}-dm-master-peer.${namespace}.svc"\n    ],\n...\n')),(0,s.kt)("p",{parentName:"li"},"  ",(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}")," is the name of the DM cluster. ",(0,s.kt)("inlineCode",{parentName:"p"},"${namespace}")," is the namespace in which the DM cluster is deployed. You can also add your customized ",(0,s.kt)("inlineCode",{parentName:"p"},"hosts"),"."),(0,s.kt)("p",{parentName:"li"},"  Finally, generate the DM-master server-side certificate:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=internal dm-master-server.json | cfssljson -bare dm-master-server\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"DM-worker"),(0,s.kt)("p",{parentName:"li"},"  First, generate the default ",(0,s.kt)("inlineCode",{parentName:"p"},"dm-worker-server.json")," file:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl print-defaults csr > dm-worker-server.json\n")),(0,s.kt)("p",{parentName:"li"},"  Then, edit this file to change the ",(0,s.kt)("inlineCode",{parentName:"p"},"CN")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"hosts")," attributes:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-json"},'...\n    "CN": "TiDB",\n    "hosts": [\n      "127.0.0.1",\n      "::1",\n      "${cluster_name}-dm-worker",\n      "${cluster_name}-dm-worker.${namespace}",\n      "${cluster_name}-dm-worker.${namespace}.svc",\n      "${cluster_name}-dm-worker-peer",\n      "${cluster_name}-dm-worker-peer.${namespace}",\n      "${cluster_name}-dm-worker-peer.${namespace}.svc",\n      "*.${cluster_name}-dm-worker-peer",\n      "*.${cluster_name}-dm-worker-peer.${namespace}",\n      "*.${cluster_name}-dm-worker-peer.${namespace}.svc"\n    ],\n...\n')),(0,s.kt)("p",{parentName:"li"},"  ",(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}")," is the name of the cluster. ",(0,s.kt)("inlineCode",{parentName:"p"},"${namespace}")," is the namespace in which the DM cluster is deployed. You can also add your customized ",(0,s.kt)("inlineCode",{parentName:"p"},"hosts"),"."),(0,s.kt)("p",{parentName:"li"},"  Finally, generate the DM-worker server-side certificate:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=internal dm-worker-server.json | cfssljson -bare dm-worker-server\n"))))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Generate the client-side certificates:"),(0,s.kt)("p",{parentName:"li"},"First, generate the default ",(0,s.kt)("inlineCode",{parentName:"p"},"client.json")," file:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl print-defaults csr > client.json\n")),(0,s.kt)("p",{parentName:"li"},"Then, edit this file to change the ",(0,s.kt)("inlineCode",{parentName:"p"},"CN"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"hosts")," attributes. You can leave the ",(0,s.kt)("inlineCode",{parentName:"p"},"hosts")," empty:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-json"},'...\n    "CN": "TiDB",\n    "hosts": [],\n...\n')),(0,s.kt)("p",{parentName:"li"},"Finally, generate the client-side certificate:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client client.json | cfssljson -bare client\n"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Create the Kubernetes Secret object:"),(0,s.kt)("p",{parentName:"li"},"If you have already generated a set of certificates for each component and a set of client-side certificate for each client as described in the above steps, create the Secret objects for the DM cluster by executing the following command:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"The DM-master cluster certificate Secret:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create secret generic ${cluster_name}-dm-master-cluster-secret --namespace=${namespace} --from-file=tls.crt=dm-master-server.pem --from-file=tls.key=dm-master-server-key.pem --from-file=ca.crt=ca.pem\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"The DM-worker cluster certificate Secret\uff1a"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create secret generic ${cluster_name}-dm-worker-cluster-secret --namespace=${namespace} --from-file=tls.crt=dm-worker-server.pem --from-file=tls.key=dm-worker-server-key.pem --from-file=ca.crt=ca.pem\n"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Client certificate Secret\uff1a"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create secret generic ${cluster_name}-dm-client-secret --namespace=${namespace} --from-file=tls.crt=client.pem --from-file=tls.key=client-key.pem --from-file=ca.crt=ca.pem\n")))),(0,s.kt)("p",{parentName:"li"},"You have created two Secret objects:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"One Secret object for each DM-master/DM-worker server-side certificate to load when the server is started;"),(0,s.kt)("li",{parentName:"ul"},"One Secret object for their clients to connect.")))),(0,s.kt)("h4",{id:"using-cert-manager"},"Using ",(0,s.kt)("inlineCode",{parentName:"h4"},"cert-manager")),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Install ",(0,s.kt)("inlineCode",{parentName:"p"},"cert-manager"),"."),(0,s.kt)("p",{parentName:"li"},"Refer to ",(0,s.kt)("a",{parentName:"p",href:"https://docs.cert-manager.io/en/release-0.11/getting-started/install/kubernetes.html"},"cert-manager installation in Kubernetes")," for details.")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Create an Issuer to issue certificates to the DM cluster."),(0,s.kt)("p",{parentName:"li"},"To configure ",(0,s.kt)("inlineCode",{parentName:"p"},"cert-manager"),", create the Issuer resources."),(0,s.kt)("p",{parentName:"li"},"First, create a directory which saves the files that ",(0,s.kt)("inlineCode",{parentName:"p"},"cert-manager")," needs to create certificates:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir -p cert-manager\ncd cert-manager\n")),(0,s.kt)("p",{parentName:"li"},"Then, create a ",(0,s.kt)("inlineCode",{parentName:"p"},"dm-cluster-issuer.yaml")," file with the following content:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: ${cluster_name}-selfsigned-ca-issuer\n  namespace: ${namespace}\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-ca\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-ca-secret\n  commonName: "TiDB"\n  isCA: true\n  duration: 87600h # 10yrs\n  renewBefore: 720h # 30d\n  issuerRef:\n    name: ${cluster_name}-selfsigned-ca-issuer\n    kind: Issuer\n---\napiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: ${cluster_name}-dm-issuer\n  namespace: ${namespace}\nspec:\n  ca:\n    secretName: ${cluster_name}-ca-secret\n')),(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}")," is the name of the cluster. The above YAML file creates three objects:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"An Issuer object of the SelfSigned type, used to generate the CA certificate needed by Issuer of the CA type;"),(0,s.kt)("li",{parentName:"ul"},"A Certificate object, whose ",(0,s.kt)("inlineCode",{parentName:"li"},"isCa")," is set to ",(0,s.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,s.kt)("li",{parentName:"ul"},"An Issuer, used to issue TLS certificates between components of the DM cluster.")),(0,s.kt)("p",{parentName:"li"},"Finally, execute the following command to create an Issuer:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f dm-cluster-issuer.yaml\n"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Generate the server-side certificate."),(0,s.kt)("p",{parentName:"li"},"In ",(0,s.kt)("inlineCode",{parentName:"p"},"cert-manager"),", the Certificate resource represents the certificate interface. This certificate is issued and updated by the Issuer created in Step 2."),(0,s.kt)("p",{parentName:"li"},"Each component needs a server-side certificate, and all components need a shared client-side certificate for their clients."),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"The DM-master server-side certificate"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-dm-master-cluster-secret\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-dm-master-cluster-secret\n  duration: 8760h # 365d\n  renewBefore: 360h # 15d\n  subject:\n    organizations:\n    - PingCAP\n  commonName: "TiDB"\n  usages:\n    - server auth\n    - client auth\n  dnsNames:\n  - "${cluster_name}-dm-master"\n  - "${cluster_name}-dm-master.${namespace}"\n  - "${cluster_name}-dm-master.${namespace}.svc"\n  - "${cluster_name}-dm-master-peer"\n  - "${cluster_name}-dm-master-peer.${namespace}"\n  - "${cluster_name}-dm-master-peer.${namespace}.svc"\n  - "*.${cluster_name}-dm-master-peer"\n  - "*.${cluster_name}-dm-master-peer.${namespace}"\n  - "*.${cluster_name}-dm-master-peer.${namespace}.svc"\n  ipAddresses:\n  - 127.0.0.1\n  - ::1\n  issuerRef:\n    name: ${cluster_name}-dm-issuer\n    kind: Issuer\n    group: cert-manager.io\n')),(0,s.kt)("p",{parentName:"li"},"  ",(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}")," is the name of the cluster. Configure the items as follows:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Set ",(0,s.kt)("inlineCode",{parentName:"p"},"spec.secretName")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}-dm-master-cluster-secret"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add ",(0,s.kt)("inlineCode",{parentName:"p"},"server auth")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"client auth")," in ",(0,s.kt)("inlineCode",{parentName:"p"},"usages"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add the following DNSs in ",(0,s.kt)("inlineCode",{parentName:"p"},"dnsNames"),". You can also add other DNSs according to your needs:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-master"'),(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-master.${namespace}"'),(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-master.${namespace}.svc"'),(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-master-peer"'),(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-master-peer.${namespace}"'),(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-master-peer.${namespace}.svc"'),(0,s.kt)("li",{parentName:"ul"},'"*.${cluster_name}-dm-master-peer"'),(0,s.kt)("li",{parentName:"ul"},'"*.${cluster_name}-dm-master-peer.${namespace}"'),(0,s.kt)("li",{parentName:"ul"},'"*.${cluster_name}-dm-master-peer.${namespace}.svc"'))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add the following two IPs in ",(0,s.kt)("inlineCode",{parentName:"p"},"ipAddresses"),". You can also add other IPs according to your needs:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"127.0.0.1")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"::1")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add the Issuer created above in ",(0,s.kt)("inlineCode",{parentName:"p"},"issuerRef"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"For other attributes, refer to ",(0,s.kt)("a",{parentName:"p",href:"https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec"},"cert-manager API"),"."),(0,s.kt)("p",{parentName:"li"},"After the object is created, ",(0,s.kt)("inlineCode",{parentName:"p"},"cert-manager")," generates a ",(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}-dm-master-cluster-secret")," Secret object to be used by the DM-master component of the DM cluster.")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"The DM-worker server-side certificate"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-dm-worker-cluster-secret\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-dm-worker-cluster-secret\n  duration: 8760h # 365d\n  renewBefore: 360h # 15d\n  subject:\n    organizations:\n    - PingCAP\n  commonName: "TiDB"\n  usages:\n    - server auth\n    - client auth\n  dnsNames:\n  - "${cluster_name}-dm-worker"\n  - "${cluster_name}-dm-worker.${namespace}"\n  - "${cluster_name}-dm-worker.${namespace}.svc"\n  - "${cluster_name}-dm-worker-peer"\n  - "${cluster_name}-dm-worker-peer.${namespace}"\n  - "${cluster_name}-dm-worker-peer.${namespace}.svc"\n  - "*.${cluster_name}-dm-worker-peer"\n  - "*.${cluster_name}-dm-worker-peer.${namespace}"\n  - "*.${cluster_name}-dm-worker-peer.${namespace}.svc"\n  ipAddresses:\n  - 127.0.0.1\n  - ::1\n  issuerRef:\n    name: ${cluster_name}-dm-issuer\n    kind: Issuer\n    group: cert-manager.io\n')),(0,s.kt)("p",{parentName:"li"},"  ",(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}")," is the name of the cluster. Configure the items as follows:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Set ",(0,s.kt)("inlineCode",{parentName:"p"},"spec.secretName")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}-dm-worker-cluster-secret"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add ",(0,s.kt)("inlineCode",{parentName:"p"},"server auth")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"client auth")," in ",(0,s.kt)("inlineCode",{parentName:"p"},"usages"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add the following DNSs in ",(0,s.kt)("inlineCode",{parentName:"p"},"dnsNames"),". You can also add other DNSs according to your needs:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-worker"'),(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-worker.${namespace}"'),(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-worker.${namespace}.svc"'),(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-worker-peer"'),(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-worker-peer.${namespace}"'),(0,s.kt)("li",{parentName:"ul"},'"${cluster_name}-dm-worker-peer.${namespace}.svc"'),(0,s.kt)("li",{parentName:"ul"},'"*.${cluster_name}-dm-worker-peer"'),(0,s.kt)("li",{parentName:"ul"},'"*.${cluster_name}-dm-worker-peer.${namespace}"'),(0,s.kt)("li",{parentName:"ul"},'"*.${cluster_name}-dm-worker-peer.${namespace}.svc"'))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add the following two IPs in ",(0,s.kt)("inlineCode",{parentName:"p"},"ipAddresses"),". You can also add other IPs according to your needs:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"127.0.0.1")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"::1")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add the Issuer created above in ",(0,s.kt)("inlineCode",{parentName:"p"},"issuerRef"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"For other attributes, refer to ",(0,s.kt)("a",{parentName:"p",href:"https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec"},"cert-manager API"),"."),(0,s.kt)("p",{parentName:"li"},"After the object is created, ",(0,s.kt)("inlineCode",{parentName:"p"},"cert-manager")," generates a ",(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}-dm-cluster-secret")," Secret object to be used by the DM-worker component of the DM cluster.")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"A set of client-side certificates of DM cluster components."),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ${cluster_name}-dm-client-secret\n  namespace: ${namespace}\nspec:\n  secretName: ${cluster_name}-dm-client-secret\n  duration: 8760h # 365d\n  renewBefore: 360h # 15d\n  subject:\n    organizations:\n    - PingCAP\n  commonName: "TiDB"\n  usages:\n    - client auth\n  issuerRef:\n    name: ${cluster_name}-dm-issuer\n    kind: Issuer\n    group: cert-manager.io\n')),(0,s.kt)("p",{parentName:"li"},"  ",(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}")," is the name of the cluster. The above YAML file creates three objects:"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Set ",(0,s.kt)("inlineCode",{parentName:"p"},"spec.secretName")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}-dm-master-cluster-secret"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add ",(0,s.kt)("inlineCode",{parentName:"p"},"server auth")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"client auth")," in ",(0,s.kt)("inlineCode",{parentName:"p"},"usages"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"dnsNames")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"ipAddresses")," are not required.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Add the Issuer created above in the ",(0,s.kt)("inlineCode",{parentName:"p"},"issuerRef"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"For other attributes, refer to ",(0,s.kt)("a",{parentName:"p",href:"https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec"},"cert-manager API")),(0,s.kt)("p",{parentName:"li"},"After the object is created, ",(0,s.kt)("inlineCode",{parentName:"p"},"cert-manager")," generates a ",(0,s.kt)("inlineCode",{parentName:"p"},"${cluster_name}-cluster-client-secret")," Secret object to be used by the clients of the DM components."))))))),(0,s.kt)("h3",{id:"deploy-the-dm-cluster"},"Deploy the DM cluster"),(0,s.kt)("p",null,"When you deploy a DM cluster, you can enable TLS between DM components, and set the ",(0,s.kt)("inlineCode",{parentName:"p"},"cert-allowed-cn")," configuration item to verify the CN (Common Name) of each component's certificate."),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Currently, you can set only one value for the ",(0,s.kt)("inlineCode",{parentName:"p"},"cert-allowed-cn")," configuration item of DM-master. Therefore, the ",(0,s.kt)("inlineCode",{parentName:"p"},"commonName")," of all ",(0,s.kt)("inlineCode",{parentName:"p"},"Certificate")," objects must be the same."))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Create the ",(0,s.kt)("inlineCode",{parentName:"li"},"dm-cluster.yaml")," file:")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: pingcap.com/v1alpha1\nkind: DMCluster\nmetadata:\n  name: ${cluster_name}\n  namespace: ${namespace}\nspec:\n  tlsCluster:\n    enabled: true\n  version: v5.3.0\n  pvReclaimPolicy: Retain\n  discovery: {}\n  master:\n    baseImage: pingcap/dm\n    maxFailoverCount: 0\n    replicas: 1\n    storageSize: "1Gi"\n    config:\n      cert-allowed-cn:\n        - TiDB\n  worker:\n    baseImage: pingcap/dm\n    maxFailoverCount: 0\n    replicas: 1\n    storageSize: "1Gi"\n    config:\n      cert-allowed-cn:\n        - TiDB\n')),(0,s.kt)("p",null,"Use the ",(0,s.kt)("inlineCode",{parentName:"p"},"kubectl apply -f dm-cluster.yaml")," file to create a DM cluster."),(0,s.kt)("h3",{id:"configure-dmctl-and-connect-to-the-cluster"},"Configure ",(0,s.kt)("inlineCode",{parentName:"h3"},"dmctl")," and connect to the cluster"),(0,s.kt)("p",null,"Get into the DM-master Pod:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl exec -it ${cluster_name}-dm-master-0 -n ${namespace} sh\n")),(0,s.kt)("p",null,"Use ",(0,s.kt)("inlineCode",{parentName:"p"},"dmctl"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"cd /var/lib/dm-master-tls\n/dmctl --ssl-ca=ca.crt --ssl-cert=tls.crt --ssl-key=tls.key --master-addr 127.0.0.1:8261 list-member\n")),(0,s.kt)("h2",{id:"use-dm-to-migrate-data-between-mysqltidb-databases-that-enable-tls-for-the-mysql-client"},"Use DM to migrate data between MySQL/TiDB databases that enable TLS for the MySQL client"),(0,s.kt)("p",null,"This section describes how to configure DM to migrate data between MySQL/TiDB databases that enable TLS for the MySQL client."),(0,s.kt)("p",null,"To learn how to enable TLS for the MySQL client of TiDB, refer to ",(0,s.kt)("a",{parentName:"p",href:"/enable-tls-for-mysql-client"},"Enable TLS for the MySQL Client"),"."),(0,s.kt)("h3",{id:"step-1-create-the-kubernetes-secret-object-for-each-tls-enabled-mysql"},"Step 1: Create the Kubernetes Secret object for each TLS-enabled MySQL"),(0,s.kt)("p",null,"Suppose you have deployed a MySQL/TiDB database with TLS-enabled for the MySQL client. To create Secret objects for the TiDB cluster, execute the following command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create secret generic ${mysql_secret_name1} --namespace=${namespace} --from-file=tls.crt=client.pem --from-file=tls.key=client-key.pem --from-file=ca.crt=ca.pem\nkubectl create secret generic ${tidb_secret_name} --namespace=${namespace} --from-file=tls.crt=client.pem --from-file=tls.key=client-key.pem --from-file=ca.crt=ca.pem\n")),(0,s.kt)("h3",{id:"step-2-mount-the-secret-objects-to-the-dm-cluster"},"Step 2: Mount the Secret objects to the DM cluster"),(0,s.kt)("p",null,"After creating the Kubernetes Secret objects for the upstream and downstream databases, you need to set ",(0,s.kt)("inlineCode",{parentName:"p"},"spec.tlsClientSecretNames")," so that you can mount the Secret objects to the Pod of DM-master/DM-worker."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: pingcap.com/v1alpha1\nkind: DMCluster\nmetadata:\n  name: ${cluster_name}\n  namespace: ${namespace}\nspec:\n  version: v5.3.0\n  pvReclaimPolicy: Retain\n  discovery: {}\n  tlsClientSecretNames:\n    - ${mysql_secret_name1}\n    - ${tidb_secret_name}\n  master:\n    ...\n")),(0,s.kt)("h3",{id:"step-3-modify-the-data-source-and-migration-task-configuration"},"Step 3: Modify the data source and migration task configuration"),(0,s.kt)("p",null,"After configuring ",(0,s.kt)("inlineCode",{parentName:"p"},"spec.tlsClientSecretNames"),", TiDB Operator will mount the Secret objects ",(0,s.kt)("inlineCode",{parentName:"p"},"${secret_name}")," to the path ",(0,s.kt)("inlineCode",{parentName:"p"},"/var/lib/source-tls/${secret_name}"),"."),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Configure ",(0,s.kt)("inlineCode",{parentName:"p"},"from.security")," in the ",(0,s.kt)("inlineCode",{parentName:"p"},"source1.yaml")," file as described in the ",(0,s.kt)("a",{parentName:"p",href:"/use-tidb-dm#create-data-source"},"data source configuration"),":"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'source-id: mysql-replica-01\nrelay-dir: /var/lib/dm-worker/relay\nfrom:\n  host: ${mysql_host1}\n  user: dm\n  password: ""\n  port: 3306\n  security:\n    ssl-ca: /var/lib/source-tls/${mysql_secret_name1}/ca.crt\n    ssl-cert: /var/lib/source-tls/${mysql_secret_name1}/tls.crt\n    ssl-key: /var/lib/source-tls/${mysql_secret_name1}/tls.key\n'))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Configure ",(0,s.kt)("inlineCode",{parentName:"p"},"target-database.security")," in the ",(0,s.kt)("inlineCode",{parentName:"p"},"task.yaml")," file as described in the ",(0,s.kt)("a",{parentName:"p",href:"/use-tidb-dm#configure-migration-tasks"},"Configure Migration Tasks"),":"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'name: test\ntask-mode: all\nis-sharding: false\n\ntarget-database:\n  host: ${tidb_host}\n  port: 4000\n  user: "root"\n  password: ""\n  security:\n    ssl-ca: /var/lib/source-tls/${tidb_secret_name}/ca.crt\n    ssl-cert: /var/lib/source-tls/${tidb_secret_name}/tls.crt\n    ssl-key: /var/lib/source-tls/${tidb_secret_name}/tls.key\n\nmysql-instances:\n- source-id: "replica-01"\n  loader-config-name: "global"\n\nloaders:\n  global:\n    dir: "/var/lib/dm-worker/dumped_data"\n')))),(0,s.kt)("h3",{id:"step-4-start-the-migration-tasks"},"Step 4: Start the migration tasks"),(0,s.kt)("p",null,"Refer to ",(0,s.kt)("a",{parentName:"p",href:"/use-tidb-dm#startcheckstop-the-migration-tasks"},"Start the migration tasks"),"."))}u.isMDXComponent=!0}}]);