"use strict";(self.webpackChunkpingcap_docs=self.webpackChunkpingcap_docs||[]).push([[5235],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8457:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return c},toc:function(){return u},default:function(){return d}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],o={title:"Enable TiDB Cluster Auto-scaling in Kubernetes",summary:"Learn how to use the TidbCluster auto-scaling feature."},s="Enable TiDB Cluster Auto-scaling in Kubernetes",p={unversionedId:"enable-tidb-cluster-auto-scaling",id:"enable-tidb-cluster-auto-scaling",title:"Enable TiDB Cluster Auto-scaling in Kubernetes",description:"TiDB has implemented an auto-scaling mechanism since v5.0 based on Kubernetes. You can enable the auto-scaling feature in TiDB Operator. This document introduces how to enable and use the auto-scaling feature for a TiDB cluster in Kubernetes.",source:"@site/docs/enable-tidb-cluster-auto-scaling.md",sourceDirName:".",slug:"/enable-tidb-cluster-auto-scaling",permalink:"/docusaurus-operator/enable-tidb-cluster-auto-scaling",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/enable-tidb-cluster-auto-scaling.md",tags:[],version:"current",frontMatter:{title:"Enable TiDB Cluster Auto-scaling in Kubernetes",summary:"Learn how to use the TidbCluster auto-scaling feature."}},c={},u=[{value:"Enable the auto-scaling feature",id:"enable-the-auto-scaling-feature",level:2},{value:"Define the auto-scaling behavior",id:"define-the-auto-scaling-behavior",level:2},{value:"Implementation principles",id:"implementation-principles",level:3},{value:"Related fields",id:"related-fields",level:3},{value:"Example",id:"example",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"enable-tidb-cluster-auto-scaling-in-kubernetes"},"Enable TiDB Cluster Auto-scaling in Kubernetes"),(0,r.kt)("p",null,"TiDB has implemented an auto-scaling mechanism since v5.0 based on Kubernetes. You can enable the auto-scaling feature in TiDB Operator. This document introduces how to enable and use the auto-scaling feature for a TiDB cluster in Kubernetes."),(0,r.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Warning")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},"The auto-scaling feature is in the alpha stage. It is highly ",(0,r.kt)("strong",{parentName:"li"},"not recommended")," to enable this feature in the critical production environment."),(0,r.kt)("li",{parentName:"ul"},"It is recommended to try this feature in a test environment. PingCAP welcomes your comments and suggestions to help improve this feature."),(0,r.kt)("li",{parentName:"ul"},"Currently, the auto-scaling feature is based solely on CPU utilization.")))),(0,r.kt)("h2",{id:"enable-the-auto-scaling-feature"},"Enable the auto-scaling feature"),(0,r.kt)("p",null,"The auto-scaling feature is disabled by default. To enable this feature, perform the following steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"values.yaml")," file of TiDB Operator and enable ",(0,r.kt)("inlineCode",{parentName:"p"},"AutoScaling")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"features")," option:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"features:\n- AutoScaling=true\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update TiDB Operator to make the configuration take effect."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm upgrade tidb-operator pingcap/tidb-operator --version=${chart_version} --namespace=tidb-admin -f ${HOME}/tidb-operator/values-tidb-operator.yaml\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Confirm the resource configuration of the target TiDB cluster."),(0,r.kt)("p",{parentName:"li"},"Before using the auto-scaling feature on the target TiDB cluster, you need to configure the CPU setting of the corresponding components. For example, you need to configure ",(0,r.kt)("inlineCode",{parentName:"p"},"spec.tikv.requests.cpu")," in TiKV:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'spec:\n  tikv:\n    requests:\n      cpu: "1"\n  tidb:\n    requests:\n      cpu: "1"\n')))),(0,r.kt)("h2",{id:"define-the-auto-scaling-behavior"},"Define the auto-scaling behavior"),(0,r.kt)("p",null,"To define the auto-scaling behavior in the TiDB cluster, configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"TidbClusterAutoScaler")," CR object. The following is an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: pingcap.com/v1alpha1\nkind: TidbClusterAutoScaler\nmetadata:\n  name: auto-scaling-demo\nspec:\n  cluster:\n    name: auto-scaling-demo\n  tikv:\n    resources:\n      storage_small:\n        cpu: 1000m\n        memory: 2Gi\n        storage: 10Gi\n        count: 3\n    rules:\n      cpu:\n        max_threshold: 0.8\n        min_threshold: 0.2\n        resource_types:\n        - storage_small\n    scaleInIntervalSeconds: 500\n    scaleOutIntervalSeconds: 300\n  tidb:\n    resources:\n      compute_small:\n        cpu: 1000m\n        memory: 2Gi\n        count: 3\n    rules:\n      cpu:\n        max_threshold: 0.8\n        min_threshold: 0.2\n        resource_types:\n        - compute_small\n")),(0,r.kt)("h3",{id:"implementation-principles"},"Implementation principles"),(0,r.kt)("p",null,"According to the configuration of the ",(0,r.kt)("inlineCode",{parentName:"p"},"TidbClusterAutoScaler")," CR, TiDB Operator sends requests to PD to query the result of scaling. Based on the result, TiDB Operator makes use of the ",(0,r.kt)("a",{parentName:"p",href:"/docusaurus-operator/deploy-heterogeneous-tidb-cluster"},"heterogeneous cluster")," feature to create, update, or delete the heterogeneous TiDB cluster (only the TiDB component or the TiKV component is configured). In this way, the auto-scaling of the TiDB cluster is achieved."),(0,r.kt)("h3",{id:"related-fields"},"Related fields"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"spec.cluster"),": the TiDB cluster to be elastically scheduled."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),": the name of the TiDB cluster."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"namespace"),": the namespace of the TiDB cluster. If not configured, this field is set to the same namespace as the ",(0,r.kt)("inlineCode",{parentName:"li"},"TidbClusterAutoScaler")," CR by default."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"spec.tikv"),": the configuration related to TiKV elastic scheduling.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"spec.tikv.resources"),": the resource types that TiKV can use for elastic scheduling. If not configured, this field is set to the same value as ",(0,r.kt)("inlineCode",{parentName:"p"},"spec.tikv.requests")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"TidbCluster")," CR corresponding to ",(0,r.kt)("inlineCode",{parentName:"p"},"spec.cluster"),"."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cpu"),": CPU configuration."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"memory"),": memory configuration."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"storage"),": storage configuration."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"count"),": the number of resources that the current configuration can use. If this field is not configured, there is no limit on resources."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"spec.tikv.rules"),": the rules of TiKV elastic scheduling. Currently only CPU-based rules are supported."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_threshold"),": If the average CPU utilization of all Pods is higher than ",(0,r.kt)("inlineCode",{parentName:"li"},"max_threshold"),", the scaling-out operation is triggered."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"min_threshold"),": If the average CPU utilization of all Pods is lower than ",(0,r.kt)("inlineCode",{parentName:"li"},"min_threshold"),", the scaling-in operation is triggered."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"resource_types"),": the resource types that can be used for CPU-based elastic scheduling. This field corresponds to ",(0,r.kt)("inlineCode",{parentName:"li"},"key")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"spec.tikv.resources[]"),". If not configured, this field is set to all ",(0,r.kt)("inlineCode",{parentName:"li"},"key"),"s in ",(0,r.kt)("inlineCode",{parentName:"li"},"spec.tikv.resources[]")," by default."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"spec.tikv.scaleInIntervalSeconds"),": the interval between this scaling-in operation and the last scaling in/out operation. If not configured, the field is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"500")," by default, which means 500 seconds.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"spec.tikv.scaleOutIntervalSeconds"),": the interval between this scaling-out operation and the last scaling in/out operation. If not configured, the field is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"300")," by default, which means 300 seconds.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"spec.tidb"),": the configuration related to TiDB elastic scheduling. Other fields are the same as ",(0,r.kt)("inlineCode",{parentName:"p"},"spec.tikv"),"."))),(0,r.kt)("p",null,"For more information about configuration fields, refer to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pingcap/tidb-operator/blob/master/docs/api-references/docs.md#basicautoscalerspec"},"API references"),"."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run the following commands to quickly deploy a TiDB cluster with 3 PD instances, 3 TiKV instances, 2 TiDB instances, and the monitoring and the auto-scaling features."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/pingcap/tidb-operator/master/examples/auto-scale/tidb-cluster.yaml -n ${namespace}\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/pingcap/tidb-operator/master/examples/auto-scale/tidb-monitor.yaml -n ${namespace}\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/pingcap/tidb-operator/master/examples/auto-scale/tidb-cluster-auto-scaler.yaml  -n ${namespace}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Prepare data using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/akopytov/sysbench"},"sysbench"),"."),(0,r.kt)("p",{parentName:"li"},"Copy the following content and paste it to the local ",(0,r.kt)("inlineCode",{parentName:"p"},"sysbench.config")," file:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-config"},"mysql-host=${tidb_service_ip}\nmysql-port=4000\nmysql-user=root\nmysql-password=\nmysql-db=test\ntime=120\nthreads=20\nreport-interval=5\ndb-driver=mysql\n")),(0,r.kt)("p",{parentName:"li"},"Prepare data by running the following command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sysbench --config-file=${path}/sysbench.config oltp_point_select --tables=1 --table-size=20000 prepare\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start the stress test:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sysbench --config-file=${path}/sysbench.config oltp_point_select --tables=1 --table-size=20000 run\n")),(0,r.kt)("p",{parentName:"li"},"The command above will return the following result:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"Initializing worker threads...\n\nThreads started!\n\n[ 5s ] thds: 20 tps: 37686.35 qps: 37686.35 (r/w/o: 37686.35/0.00/0.00) lat (ms,95%): 0.99 err/s: 0.00 reconn/s: 0.00\n[ 10s ] thds: 20 tps: 38487.20 qps: 38487.20 (r/w/o: 38487.20/0.00/0.00) lat (ms,95%): 0.95 err/s: 0.00 reconn/s: 0.00\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a new terminal session and view the Pod changing status of the TiDB cluster by running the following command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'watch -n1 "kubectl -n ${namespace} get pod"\n')),(0,r.kt)("p",{parentName:"li"},"The output is as follows:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"auto-scaling-demo-discovery-fbd95b679-f4cb9   1/1     Running   0          17m\nauto-scaling-demo-monitor-6857c58564-ftkp4    3/3     Running   0          17m\nauto-scaling-demo-pd-0                        1/1     Running   0          17m\nauto-scaling-demo-tidb-0                      2/2     Running   0          15m\nauto-scaling-demo-tidb-1                      2/2     Running   0          15m\nauto-scaling-demo-tikv-0                      1/1     Running   0          15m\nauto-scaling-demo-tikv-1                      1/1     Running   0          15m\nauto-scaling-demo-tikv-2                      1/1     Running   0          15m\n")),(0,r.kt)("p",{parentName:"li"},"View the changing status of Pods and the TPS and QPS of sysbench. When new Pods are created in TiKV and TiDB, the TPS and QPS of sysbench increase significantly."),(0,r.kt)("p",{parentName:"li"},"After sysbench finishes the test, the newly created Pods in TiKV and TiDB disappear automatically.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Destroy the environment by running the following commands:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete tidbcluster auto-scaling-demo -n ${namespace}\nkubectl delete tidbmonitor auto-scaling-demo -n ${namespace}\nkubectl delete tidbclusterautoscaler auto-scaling-demo -n ${namespace}\n")))))}d.isMDXComponent=!0}}]);